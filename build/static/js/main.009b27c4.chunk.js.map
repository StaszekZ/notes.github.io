{"version":3,"sources":["assets/icons/logout.svg","Theme/GlobalStyle.js","utils/database.js","reducers/todosReducer.js","reducers/modalReducer.js","store/index.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/Form/Form.js","components/Modal/Modal.js","Layout/MainLayout.js","components/H1/H1.js","components/views/Todos.js","Layout/HomePageLayout.js","components/views/Home.js","components/views/Notes.js","components/views/SignIn.js","components/views/Root.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","initialState","todos","isLoading","editID","error","fetchWithoutLoading","dispatch","fetch","then","r","json","arrayTodos","Object","keys","map","key","id","type","payload","setTodos","addNewTask","taskData","method","body","JSON","stringify","editTask","task","editedId","isModalOpen","toggleModalOpen","middleware","applyMiddleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","todosReducer","state","action","modalReducer","store","createStore","StyledButton","styled","Link","theme","colors","white","primary","media","phone","fontSize","xs","landscape","s","modal","css","homePage","dark","ButtonLink","children","to","Bar","div","isBig","StyledButtonPlace","ButtonIcon","icon","active","NavBar","Button","logoutIcon","blur","font","this","regular","bold","xxs","m","l","xl","tablet","StyledTdWithHover","td","deadline","StyledTd","button","TodoItem","content","completed","index","onEdit","onDelete","onCompleteCheck","className","onClick","faEdit","faTrashAlt","faCheck","color","faTimes","StyledInput","input","TodoInput","props","handleOnSave","onSave","onEnterSave","e","handleInputChange","setState","target","name","value","handleCompletedCheck","onChange","onKeyDown","faSave","handleOnDelete","React","Component","mapDispatchToProps","connect","StyledLabel","label","StyledModalInput","StyledForm","form","StyledButtonWrapper","AddTask","putDataInDatabase","handleOnAddClick","preventDefault","alert","handleOnChange","onQuit","htmlFor","placeholder","faPlus","faUndo","StyledWrapper","isVisible","Modal","onAdd","StyledAddItemButton","onAddFetch","StyledH1","h1","StyledH2","h2","StyledTodoList","StyledTable","Table","StyledButtonClear","StyledFiltersWrapper","fetchTodos","setCompleted","completedId","deleteTask","deletedId","useState","setEditedID","filterContent","setFilterContent","filterDeadline","setFilterDeadline","useEffect","handleEdit","editedID","striped","responsive","colSpan","Spinner","animation","filter","todo","toLowerCase","includes","length","HomePageLayout","Home","style","Notes","SignIn","Root","basename","process","exact","path","component","Todos","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.009b27c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.4a3642db.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml{\r\n  font-size: 62.5%;\r\n\r\n}\r\n\r\n\r\nbody{\r\n  font-size: 1.6rem;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: 'Nunito', sans-serif;\r\n  background-color: #0f1c21;\r\n  /* background-color: pink; */\r\n\r\n  \r\n th, td {\r\n   text-align: center;\r\n }}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import firebase from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\r\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\r\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\r\n  projectId: 'notes-and-todos-6756c',\r\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\r\n  messagingSenderId: '432462096709',\r\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\r\n  measurementId: 'G-LL8BYZF9S7',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const DATABASE_URL = firebaseConfig.databaseURL;\r\n","import { DATABASE_URL } from 'utils/database';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  isLoading: false,\r\n  editID: null,\r\n  error: null,\r\n};\r\n\r\n//actions\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_TODOS = 'SET_TODOS';\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TODOS:\r\n      return {\r\n        error: null,\r\n        isLoading: false,\r\n        editID: null,\r\n        todos: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setTodos = todos => ({ type: SET_TODOS, payload: todos });\r\n\r\nconst fetchWithoutLoading = () => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos.json`)\r\n      .then(r => r.json())\r\n      .then(todos => {\r\n        const arrayTodos = todos\r\n          ? Object.keys(todos).map(key => {\r\n              return {\r\n                id: key,\r\n                ...todos[key],\r\n              };\r\n            })\r\n          : [];\r\n        dispatch(setTodos(arrayTodos));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setCompleted = (completedId, content, deadline, completed) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${completedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        content,\r\n        deadline,\r\n        completed: !completed,\r\n      }),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchTodos = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    dispatch(fetchWithoutLoading());\r\n  };\r\n};\r\n\r\nexport const addNewTask = taskData => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(taskData),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTask = deletedId => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const editTask = (task, editedId) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${editedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(task),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n","const initialState = {\r\n  isModalOpen: false,\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_MODAL':\r\n      return {\r\n        isModalOpen: !state.isModalOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toggleModalOpen = () => ({ type: 'TOGGLE_MODAL' });\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { todosReducer } from 'reducers/todosReducer';\r\nimport { modalReducer } from 'reducers/modalReducer';\r\n\r\nconst middleware = applyMiddleware(thunk);\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(middleware);\r\n\r\nconst combinedReducers = combineReducers({ todosReducer, modalReducer });\r\n\r\nconst store = createStore(combinedReducers, enhancer);\r\nexport default store;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledButton = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  width: 20%;\r\n  padding: 1rem;\r\n  height: 50px;\r\n  background: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    background: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-size: ${({ theme }) => theme.fontSize.xs};\r\n    width: 50px;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 30px;\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 10px 20px -15px ${({ theme }) => theme.colors.primary};\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n  }\r\n  ${({ modal }) =>\r\n    modal &&\r\n    css`\r\n      width: 40%;\r\n    `}\r\n  ${({ homePage }) =>\r\n    homePage &&\r\n    css`\r\n      height: 100px;\r\n      box-shadow: -5px 3px 15px rgba(62, 194, 233, 0.3);\r\n      width: 40%;\r\n\r\n      background-color: ${({ theme }) => theme.colors.dark};\r\n      border: 3px solid ${({ theme }) => theme.colors.primary};\r\n      ${({ theme }) => theme.media.phone} {\r\n        background: ${({ theme }) => theme.colors.dark};\r\n        color: ${({ theme }) => theme.colors.primary};\r\n        font-size: ${({ theme }) => theme.fontSize.xs};\r\n        width: 40%;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ButtonLink = ({ children, to, homePage }) => (\r\n  <StyledButton homePage={homePage} to={to}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nexport default ButtonLink;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport ButtonLink from 'components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\n\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 12vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.dark};\r\n  z-index: 2;\r\n`;\r\n\r\nconst StyledButtonPlace = styled.div`\r\n  width: 50%;\r\n  height: inherit;\r\n  display: inline-flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonIcon = styled(Link)`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 20px;\r\n  margin-right: 1%;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: 50% 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n  ${({theme})=> theme.media.landscape}{\r\n  width: 30px;\r\n  height: 30px;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => (\r\n  <Bar>\r\n    <StyledButtonPlace>\r\n      <ButtonLink to=\"/home\">home</ButtonLink>\r\n      <ButtonLink to=\"/todos\">todos</ButtonLink>\r\n      <ButtonLink to=\"/notes\">notes</ButtonLink>\r\n    </StyledButtonPlace>\r\n    <ButtonIcon to=\"/signin\" icon={logoutIcon} />\r\n  </Bar>\r\n);\r\n\r\nexport default NavBar;\r\n","import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    this: 300,\r\n    regular: 400,\r\n    bold: 600,\r\n  },\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n  media: {\r\n    phone: '@media(max-width: 520px)',\r\n    tablet: '@media(max-width: 768px)',\r\n    landscape: '@media(max-width: 736px) and (orientation: landscape) ',\r\n  },\r\n};\r\n","export const colors = {\r\n  white: '#ffffff',\r\n  primary: '#3ec2e9',\r\n  dark: '#0f1c21',\r\n  blur: 'grey'\r\n  // hover: '#'\r\n};\r\n","// TodoItem.js\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\nconst StyledTdWithHover = styled.td`\r\n  width: 50%;\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 10vw;\r\n    `}\r\n`;\r\n\r\n export const StyledTd = styled.td`\r\n width: fit-content;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  background: white;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 10px;\r\n  ${({theme})=> theme.media.phone}{\r\n    height: 30px;\r\n  width: 30px;\r\n  }\r\n`;\r\n\r\nconst TodoItem = ({\r\n  content,\r\n  id,\r\n  deadline,\r\n  completed,\r\n  index,\r\n  onEdit,\r\n  onDelete,\r\n  onCompleteCheck,\r\n}) => {\r\n  const handleOnEdit = () => {\r\n    onEdit(id);\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const handleCompletedCheck = () => {\r\n    onCompleteCheck(id, content, deadline, completed);\r\n  };\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle\" >\r\n        {content}\r\n      </StyledTdWithHover>\r\n      <StyledTdWithHover deadline className=\"align-middle\">\r\n        {deadline}\r\n      </StyledTdWithHover>\r\n      <StyledTd className=\"align-middle\">\r\n        <StyledButton onClick={handleOnEdit}>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </StyledButton>\r\n         <StyledButton onClick={handleOnDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleCompletedCheck}>\r\n          {completed ? (\r\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n          )}\r\n        </StyledButton>\r\n      </StyledTd>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport { editTask } from 'reducers/todosReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSave, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport {StyledTd} from 'components/Todo/TodoItem'\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 0.5rem 0.5rem;\r\n  float: left;\r\n  text-align: center;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 1.2rem;\r\n  }\r\n  /* ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: inherit;\r\n    `} */\r\n`;\r\n\r\nclass TodoInput extends React.Component {\r\n  state = {\r\n    content: this.props.content,\r\n    deadline: this.props.deadline,\r\n    completed: this.props.completed,\r\n  };\r\n\r\n  handleOnSave = () => {\r\n    this.props.onSave(this.state, this.props.id);\r\n  };\r\n\r\n  onEnterSave = (e) =>{\r\n    if(e.key === 'Enter'){\r\n      this.handleOnSave();\r\n    }\r\n  }\r\n\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCompletedCheck = () => {\r\n    this.props.onCompleteCheck(\r\n      this.props.id,\r\n      this.state.content,\r\n      this.state.deadline,\r\n      this.state.completed,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { index, id } = this.props;\r\n    const { content, deadline, completed } = this.state;\r\n    return (\r\n      <>\r\n        <tr key={id}>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">\r\n            <StyledInput \r\n            name=\"content\" \r\n            value={content} \r\n            onChange={this.handleInputChange} \r\n            onKeyDown={this.onEnterSave}\r\n            />\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n              <StyledInput\r\n              name=\"deadline\"\r\n              deadline\r\n              value={deadline}\r\n              onChange={this.handleInputChange}\r\n              onKeyDown={this.onEnterSave}\r\n            />\r\n          </td>\r\n          <StyledTd className=\"align-middle\">\r\n            <StyledButton onClick={this.handleOnSave} >\r\n            <FontAwesomeIcon icon={faSave} />\r\n            </StyledButton>\r\n         \r\n         \r\n            <StyledButton onClick={this.handleOnDelete}>\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n            </StyledButton>\r\n       \r\n\r\n              <StyledButton onClick={this.handleCompletedCheck}>\r\n              {completed ? (\r\n                <FontAwesomeIcon icon={faCheck}  color=\"green\" />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n              )}\r\n            </StyledButton>\r\n          </StyledTd>\r\n        </tr>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  editTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { StyledInput } from 'components/Todo/TodoInput';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport { addNewTask } from 'reducers/todosReducer';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faUndo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledLabel = styled.label`\r\n  color: white;\r\n  display: block;\r\n`;\r\n\r\nconst StyledModalInput = styled(StyledInput)`\r\n  width: 70%;\r\n  margin: 1rem auto;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 90%;\r\n  margin-top: auto;\r\n`;\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    content: '',\r\n    deadline: '',\r\n    completed: false,\r\n  };\r\n\r\n  putDataInDatabase = () => {\r\n    this.props.addNewTask(this.state);\r\n    this.props.toggleModalOpen();\r\n    this.setState({\r\n      content: '',\r\n      deadline: '',\r\n    });\r\n  };\r\n\r\n  handleOnAddClick = e => {\r\n    e.preventDefault();\r\n    if (!this.state.content) {\r\n      return alert('Please add new task or quit!');\r\n    }\r\n    this.putDataInDatabase();\r\n  };\r\n\r\n  onEnterSave = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleOnAddClick(e);\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onQuit = () => {\r\n    this.props.toggleModalOpen();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <StyledForm>\r\n        <StyledLabel htmlFor=\"newTask\">Add new task:</StyledLabel>\r\n        <StyledModalInput\r\n          name=\"content\"\r\n          placeholder=\"new task\"\r\n          value={this.state.content}\r\n          onChange={this.handleOnChange}\r\n          onKeyDown={this.onEnterSave}\r\n        ></StyledModalInput>\r\n        <StyledModalInput\r\n          deadline\r\n          name=\"deadline\"\r\n          placeholder=\"new deadline\"\r\n          value={this.state.deadline}\r\n          onChange={this.handleOnChange}\r\n          onKeyDown={this.onEnterSave}\r\n        ></StyledModalInput>\r\n        <StyledButtonWrapper>\r\n          <StyledButton\r\n            modal=\"true\"\r\n            type=\"submit\"\r\n            onClick={this.handleOnAddClick}\r\n                     >\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </StyledButton>\r\n          <StyledButton onClick={this.onQuit}>\r\n            <FontAwesomeIcon icon={faUndo} color=\"red\" />\r\n          </StyledButton>\r\n        </StyledButtonWrapper>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addNewTask,\r\n  toggleModalOpen,\r\n};\r\nexport default connect(null, mapDispatchToProps)(AddTask);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AddTask from 'components/Form/Form';\r\n\r\nconst StyledWrapper = styled.div`\r\n  border: 5px solid ${({ theme }) => theme.colors.primary};\r\n  z-index: 1;\r\n  position: fixed;\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n  padding: 2rem;\r\n  flex-direction: column;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 50%;\r\n  width: 50%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  /* transform: translate(${({ isVisible }) => (isVisible ? '-100%' : '100%')}); */\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 60%;\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 60%;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ isVisible, onAdd }) => {\r\n  return (\r\n    <StyledWrapper isVisible={isVisible}>\r\n      <AddTask onAdd={onAdd}></AddTask>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledAddItemButton = styled(StyledButton)`\r\n  position: fixed;\r\n  top: 85vh;\r\n  left: 85vw;\r\n  width: 50px;\r\n  height: 50px;\r\n  z-index: 2;\r\n  display: ${({ button }) => (button ? 'flex' : 'none')};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\nbackground-color: ${({ theme }) => theme.colors.dark};\r\n  filter: blur(${({ isModalOpen }) => isModalOpen && '5px'});\r\n`;\r\n\r\nconst MainLayout = ({ children, onAddFetch, isModalOpen, toggleModalOpen, button }) => {\r\n  const handleIsVisible = () => {\r\n    toggleModalOpen();\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    toggleModalOpen();\r\n    onAddFetch();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} isModalOpen={isModalOpen}>\r\n        <StyledAddItemButton onClick={handleIsVisible} button={button}>\r\n          <FontAwesomeIcon icon={faPlus} />\r\n        </StyledAddItemButton>\r\n        <Modal onAdd={handleAddTask} isVisible={isModalOpen} />\r\n        <NavBar />\r\n        <StyledWrapper isModalOpen={isModalOpen}>{children}</StyledWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.modalReducer.isModalOpen,\r\n});\r\nconst mapDispatchToProps = {\r\n  toggleModalOpen,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n\r\n\r\nexport const StyledH2 = styled.h2`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 3rem;\r\n  margin-bottom: 4rem;\r\n  position: relative;\r\n  top: 13vh;\r\n  /* background-color: red; */\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport { StyledH1, StyledH2 } from 'components/H1/H1';\r\nimport TodoItem from 'components/Todo/TodoItem';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport TodoInput from 'components/Todo/TodoInput';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\n\r\n\r\nimport { fetchTodos, addNewTask, setCompleted, deleteTask, editTask } from 'reducers/todosReducer';\r\n\r\nconst StyledTodoList = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 13vh;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 95%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  table-layout: auto;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\nwidth: 40%;\r\nheight: 40px;\r\nborder: 2px solid ${({ theme }) => theme.colors.primary};\r\nborder-radius: 5px;\r\ncolor: white;\r\nbackground-color:${({ theme }) => theme.colors.dark}; \r\nmargin-bottom: 0.5rem;\r\nmargin-right: 0.5rem;\r\n${({theme})=> theme.media.tablet}{\r\n  ::placeholder{\r\n  font-size: 1.5rem;\r\n}\r\n}\r\n\r\n\r\n`;\r\n\r\nconst StyledButtonClear = styled(StyledButton)`\r\nwidth: 20%;\r\nmargin-bottom: 0.5rem;\r\n`;\r\n\r\nconst StyledFiltersWrapper = styled.div`\r\nwidth: 50%;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n${({theme})=> theme.media.tablet}{\r\n  width: 100%;\r\n}\r\n${({theme})=> theme.media.landscape}{\r\n  width: 100%;\r\n}\r\n`;\r\n\r\n\r\nconst Todos = ({ isLoading, fetchTodos, todos, deleteTask, setCompleted, editTask }) => {\r\n  const [editID, setEditedID] = useState(null);\r\n  const [filterContent, setFilterContent] = useState('');\r\n  const [filterDeadline, setFilterDeadline] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleOnSave = (task, editedId) => {\r\n    editTask(task, editedId);\r\n    setEditedID(null);\r\n  };\r\n\r\n  const handleEdit = editedID => {\r\n    setEditedID(editedID);\r\n  };\r\n\r\n  const handleFilterContentChange = e => {\r\n    setFilterContent(e.target.value);\r\n  };\r\n  const handleFilterDeadlineChange = e => {\r\n    setFilterDeadline(e.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterContent('');\r\n    setFilterDeadline('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainLayout onAddFetch={fetchTodos} button=\"true\">\r\n        <StyledTodoList>\r\n          {/* tutaj wrzucić LI LOADING  */}\r\n          <StyledH1>Todos List</StyledH1>\r\n          <StyledFiltersWrapper>\r\n\r\n          <StyledInput\r\n            placeholder=\"🔎 by content\"\r\n            value={filterContent}\r\n            onChange={handleFilterContentChange}\r\n          ></StyledInput>\r\n          <StyledInput\r\n            placeholder=\"🔎 by deadline\"\r\n            value={filterDeadline}\r\n            onChange={handleFilterDeadlineChange}\r\n          ></StyledInput>\r\n          <StyledButtonClear onClick={clearFilter}>Clear</StyledButtonClear>\r\n          </StyledFiltersWrapper>\r\n          <StyledTable striped responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Content</th>\r\n                <th>Deadline</th>\r\n                <th>Edition</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={12}>\r\n                    <Spinner animation=\"border\" />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                todos\r\n                  .filter(todo => (todo.content.toLowerCase().includes(filterContent.toLowerCase())\r\n                  \r\n                  ))\r\n                  .filter(todo => (todo.deadline.toLowerCase().includes(filterDeadline.toLowerCase())\r\n                  ))\r\n\r\n                  //   if (this.state.showCompleted && this.state.showInCompleted) {\r\n                  //     return textFilter;\r\n                  //   } else if (this.state.showCompleted) {\r\n                  //     return textFilter && todo.completed === true;\r\n                  //   } else if (this.state.showInCompleted) {\r\n                  //     return textFilter && todo.completed === false;\r\n                  //   } else {\r\n                  //     return false;\r\n                  //   }\r\n                  // })\r\n                  .map((todo, index) =>\r\n                    editID === todo.id ? (\r\n                      <TodoInput\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        content={todo.content}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onSave={handleOnSave}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ) : (\r\n                      <TodoItem\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        content={todo.content}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onEdit={handleEdit}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ),\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n          {/* </>} */}\r\n        </StyledTodoList>\r\n        {!isLoading && !todos.length && (\r\n          <StyledH2>Your todo list is empty! Enter new task! </StyledH2>\r\n        )}\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todosReducer.todos,\r\n  isLoading: state.todosReducer.isLoading,\r\n  error: state.todosReducer.error,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchTodos,\r\n  addNewTask,\r\n  setCompleted,\r\n  deleteTask,\r\n  editTask,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\r\n","import React from 'react';\r\nimport  { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\n\r\nconst HomePageLayout = ({children}) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <NavBar />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default HomePageLayout;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomePageLayout from 'Layout/HomePageLayout';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from 'Theme/GlobalStyle';\r\nimport ButtonLink from 'components/Button/Button';\r\n\r\nconst StyledWrapper = styled.div`\r\n  /* border: 3px solid ${({theme})  => theme.colors.primary}; */\r\n   position: absolute;\r\n   top: 50%;\r\n   left: 50%;\r\n   height: 50%;\r\n   width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n  transform: translate(-50%, -50%);\r\n  background-color: ${({theme})  => theme.colors.dark};\r\n  transition: transform 0.25s ease-in-out;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n display: flex;\r\n justify-content: space-evenly;\r\n align-items: center;\r\n width: 90%;\r\n height: 50%;\r\n`;\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <HomePageLayout>\r\n        <StyledWrapper>\r\n          <h1 style={{color: 'white'}}>In this app you can store your: </h1>\r\n          <StyledButtonWrapper>\r\n             <ButtonLink homePage='true' to='/todos'>todos</ButtonLink>\r\n             <ButtonLink homePage='true' to='/notes'>notes</ButtonLink>\r\n             </StyledButtonWrapper>\r\n        </StyledWrapper>\r\n       </HomePageLayout>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport MainLayout from 'Layout/MainLayout';\r\n\r\nconst Notes = () => (\r\n  <MainLayout>\r\n    <h1 style={{ color: 'white' }}>my private notes</h1>;\r\n  </MainLayout>\r\n);\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\n\r\nconst SignIn = () => <h1 style={{color: 'white'}}>please Sign In </h1>;\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport Todos from 'components/views/Todos';\r\nimport Home from 'components/views/Home';\r\nimport Notes from 'components/views/Notes';\r\nimport SignIn from 'components/views/SignIn';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyle />\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={SignIn}>\r\n          {/* {loggedIn ? <Redirect to=\"/dashboard\" /> : <PublicHomePage />} */}\r\n          <Redirect to=\"/home\"/>\r\n          </Route>\r\n          <Route path=\"/todos\" component={Todos} />\r\n          <Route path=\"/notes\" component={Notes} />\r\n          <Route path=\"/home\" component={Home} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/views/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
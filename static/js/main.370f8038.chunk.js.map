{"version":3,"sources":["assets/icons/logout.svg","assets/icons/edit.svg","Theme/GlobalStyle.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","Layout/MainLayout.js","components/H1/H1.js","utils/database.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/views/Todos.js","components/views/App.js","components/views/Notes.js","components/views/SignIn.js","components/views/Root.js","serviceWorker.js","index.js","assets/icons/trash.svg","assets/icons/save.svg"],"names":["module","exports","GlobalStyle","createGlobalStyle","StyledButtonLink","styled","Link","theme","colors","primary","white","media","desktop","Button","children","to","Bar","div","isBig","dark","StyledButtonPlace","StyledLogo","ButtonIcon","icon","active","NavBar","logoutIcon","font","this","regular","bold","fontSize","xxs","xs","s","m","l","xl","phone","StyledWrapper","MainLayout","StyledH1","h1","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","StyledTdWithHover","td","deadline","css","StyledButton","button","TodoItem","todo","index","onEdit","onSave","useState","key","id","className","as","content","onClick","src","editIcon","console","log","deleteIcon","completed","StyledInput","input","TodoInput","state","props","handleOnSave","fetch","method","body","JSON","stringify","then","handleOnDelete","handleInputChange","e","setState","target","name","value","onChange","saveIcon","alt","React","Component","StyledTodoList","StyledTable","Table","Todos","todos","isLoading","editID","fetchTodos","r","json","arrayTodos","Object","keys","map","saveClicked","handleEdit","striped","responsive","colSpan","Spinner","animation","App","Notes","style","color","SignIn","Root","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,8jBCE3C,IAuBeC,EAvBKC,YAAH,K,wmBCEV,IAAMC,EAAmBC,YAAOC,IAAPD,CAAH,KAQb,qBAAGE,MAAkBC,OAAOC,WAGjC,qBAAGF,MAAkBC,OAAOE,SAKnC,qBAAGH,MAAkBI,MAAMC,WACb,qBAAGL,MAAkBC,OAAOE,SACjC,qBAAGH,MAAkBC,OAAOC,WAKvB,qBAAGF,MAAkBC,OAAOC,WACjC,qBAAGF,MAAkBC,OAAOE,SAO1BG,EAFA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAb,OAAsB,kBAACX,EAAD,CAAkBW,GAAIA,GAAKD,I,ynCC3BhE,IAAME,EAAMX,IAAOY,IAAV,KASM,qBAAGC,MAAqB,MAAQ,WAClB,qBAAGX,MAAkBC,OAAOC,WACzC,qBAAGF,MAAkBC,OAAOW,QAGtCC,EAAoBf,IAAOY,IAAV,KAQjBI,EAAahB,IAAOY,IAAV,KAGM,qBAAGV,MAAkBC,OAAOC,WACvC,qBAAGF,MAAkBC,OAAOE,SAOjCY,EAAajB,YAAOC,IAAPD,CAAH,KAKU,qBAAGkB,QAIP,qBAAGhB,MAAkBC,OAAOC,WAE5B,qBAAGe,OAAuB,QAAU,iBAiB3CC,EAXA,kBACb,kBAACT,EAAD,KACE,kBAACI,EAAD,KACE,kBAACC,EAAD,0BACA,kBAAC,EAAD,CAAQN,GAAG,UAAX,SACA,kBAAC,EAAD,CAAQA,GAAG,UAAX,UAEF,kBAACO,EAAD,CAAYP,GAAG,SAASQ,KAAMG,QC7DrBnB,EAAQ,CACnBC,OCHoB,CACpBE,MAAO,UACPD,QAAS,UACTU,KAAM,WDCNQ,KAAM,CACJC,KAAM,IACNC,QAAS,IACTC,KAAM,KAERC,SAAU,CACRC,IAAK,OACLC,GAAI,SACJC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,GAAI,QAEN1B,MAAO,CACL2B,MAAO,4BACP1B,QAAS,6B,qQEdb,IAAM2B,EAAgBlC,IAAOY,IAAV,KAOH,qBAAGV,MAAkBC,OAAOW,QAa7BqB,EATI,SAAC,GAAD,IAAG1B,EAAH,EAAGA,SAAH,OACjB,kBAAC,IAAD,CAAeP,MAAOA,GACpB,kBAACgC,EAAD,KACE,kBAAC,EAAD,MACCzB,K,oJCjBA,IAAM2B,EAAWpC,IAAOqC,GAAV,KACV,qBAAGnC,MAAkBC,OAAOE,SACtB,qBAAGH,MAAkBoB,KAAKG,Q,qECFrCa,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,OAGjBC,EAASC,cAAcV,GAGhB,IAAMW,EAAeX,EAAeG,Y,+WCT3C,IAAMS,EAAoBlD,IAAOmD,GAAV,KAGV,qBAAGjD,MAAkBC,OAAOC,WAErC,qBAAGgD,UAEHC,YADQ,QAMCC,EAAetD,IAAOuD,OAAV,KAgDVC,EAzCE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAeC,GAAa,EAArBC,OAAqB,EAAbD,QAAa,EACpBE,oBAAS,GADW,gCAE1BA,mBAASJ,IAFiB,6BAcpD,OACE,wBAAIK,IAAKL,EAAKM,IAEZ,wBAAIC,UAAU,gBAAgBN,EAAQ,GACtC,kBAACR,EAAD,CAAmBc,UAAU,4BAA4BC,GAAG,MACzDR,EAAKS,SAGR,wBAAIF,UAAU,gBACZ,kBAACV,EAAD,CAAca,QAAS,kBAAMR,EAAOF,EAAKM,MACvC,yBAAKK,IAAKC,MAAa,MAG3B,wBAAIL,UAAU,gBACZ,kBAACV,EAAD,CAAca,QAlBG,WACrBG,QAAQC,IAAR,aAkBM,yBAAKH,IAAKI,QAGd,kBAACtB,EAAD,CAAmBE,UAAQ,EAACY,UAAU,eAAeC,GAAG,MACrD,IACAR,EAAKL,UAER,wBAAIY,UAAU,gBAAgBP,EAAKgB,UAAY,eAAO,Y,mcCvD5D,IAAMC,GAAc1E,IAAO2E,MAAV,MAab,qBAAGvB,UAEHC,YADQ,SAmEGuB,G,4MA5DbC,MAAQ,CACNX,QAAS,EAAKY,MAAMrB,KAAKS,QACzBd,SAAU,EAAK0B,MAAMrB,KAAKL,U,EAG5B2B,aAAe,SAAAhB,GACbiB,MAAM,GAAD,OAAI/B,EAAJ,kBAA0Bc,EAA1B,SAAqC,CACxCkB,OAAQ,MACRC,KAAMC,KAAKC,UAAU,EAAKP,SACzBQ,MAAK,WACN,EAAKP,MAAMlB,OAAOG,O,EAItBuB,eAAiB,WACfhB,QAAQC,IAAR,Y,EAEFgB,kBAAoB,SAAAC,GAClB,EAAKC,SAAL,gBACGD,EAAEE,OAAOC,KAAO,CAACH,EAAEE,OAAOE,U,uDAIrB,IAAD,SACiBrE,KAAKuD,MAArBrB,EADD,EACCA,KAAMC,EADP,EACOA,MADP,EAEuBnC,KAAKsD,MAA3BX,EAFD,EAECA,QAASd,EAFV,EAEUA,SACjB,OACE,oCACE,wBAAIU,IAAKL,EAAKM,IACZ,wBAAIC,UAAU,gBAAgBN,EAAQ,GACtC,wBAAIM,UAAU,gBACZ,kBAACU,GAAD,CAAaiB,KAAK,UAAUC,MAAO1B,EAAS2B,SAAUtE,KAAKgE,qBAG7D,wBAAIvB,UAAU,gBACZ,kBAACV,EAAD,CAAca,QAAS,kBAAM,EAAKY,aAAatB,EAAKM,MAClD,yBAAKK,IAAK0B,IAAUC,IAAI,gBAG5B,wBAAI/B,UAAU,gBACZ,kBAACV,EAAD,CAAca,QAAS5C,KAAK+D,gBAC1B,yBAAKlB,IAAKI,QAId,wBAAIR,UAAU,gBACZ,kBAACU,GAAD,CACEiB,KAAK,WACLvC,UAAQ,EACRwC,MAAOxC,EACPyC,SAAUtE,KAAKgE,qBAGnB,wBAAIvB,UAAU,gBAAgBP,EAAKgB,UAAY,eAAO,gB,GAtDxCuB,IAAMC,W,uRCM9B,IAAMC,GAAiBlG,IAAOY,IAAV,MAUduF,GAAcnG,YAAOoG,KAAPpG,CAAH,MACN,qBAAGE,MAAkBC,OAAOE,SA2HxBgG,G,4MAvHbxB,MAAQ,CACNyB,MAAO,GACPC,WAAW,EACXC,OAAQ,M,EAGVC,WAAa,WACXzB,MAAM,GAAD,OAAI/B,EAAJ,gBACFoC,MAAK,SAAAqB,GAAC,OAAIA,EAAEC,UACZtB,MAAK,SAAAiB,GACJ,IAAMM,EAAaN,EACfO,OAAOC,KAAKR,GAAOS,KAAI,SAAAjD,GACrB,OAAO,aACLC,GAAID,GACDwC,EAAMxC,OAGb,GAEJ,EAAK2B,SAAS,CACZa,MAAOM,EACPL,WAAW,Q,EAYnBS,YAAc,SAAAR,GACZlC,QAAQC,IAAI,EAAKM,MAAMyB,OACvB,EAAKG,aACL,EAAKhB,SAAS,CACZe,OAAQ,Q,EAIZS,WAAa,SAAAT,GACX,EAAKf,SAAS,CAAEe,Y,kEAZhBjF,KAAKkF,e,+BAeG,IAAD,OAECF,GADShF,KAAKuD,MAAdrB,KACclC,KAAKsD,MAAnB0B,WACR,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAACL,GAAD,KACE,kBAAC9D,EAAD,mBACA,kBAAC+D,GAAD,CAAae,SAAO,EAACC,YAAU,GAC7B,+BACE,4BACE,iCACA,uCACA,oCACA,sCACA,wCACA,2CAGJ,+BACGZ,EACC,4BACE,wBAAIa,QAAS,IACX,kBAACC,GAAA,EAAD,CAASC,UAAU,aAIvB/F,KAAKsD,MAAMyB,MAgBRS,KAAI,SAACtD,EAAMC,GAAP,OACH,oCAGG,EAAKmB,MAAM2B,SAAW/C,EAAKM,GAC1B,kBAAC,GAAD,CACED,IAAKL,EAAKM,GACVL,MAAOA,EACPD,KAAMA,EACNG,OAAQ,kBAAM,EAAKoD,YAAYvD,EAAKM,OAGtC,kBAAC,EAAD,CACED,IAAKL,EAAKM,GACVL,MAAOA,EACPD,KAAMA,EACNE,OAAQ,kBAAM,EAAKsD,WAAWxD,EAAKM,oB,GA1G3CiC,IAAMC,WC/BXsB,GATH,WACV,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHSC,GAND,kBACZ,kBAAC,EAAD,KACE,wBAAIC,MAAO,CAAEC,MAAO,UAApB,oBADF,MCAaC,GAFA,kBAAM,gDCuBNC,GAhBF,WACX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAeC,SAAUC,oBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,KACjC,kBAAC,IAAD,CAAOS,KAAK,SAASC,UAAW5B,KAChC,kBAAC,IAAD,CAAO2B,KAAK,SAASC,UAAWT,KAChC,kBAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWN,SCNvBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzD,MAAK,SAAA0D,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5E,QAAQ4E,MAAMA,EAAMC,a,mBEzI5BxJ,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.370f8038.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.4a3642db.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2d229d35.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Grandstander:wght@100;300;500;800&display=swap');\r\n\r\n*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml{\r\n  font-size: 62.5%;\r\n}\r\n\r\nbody{\r\n  font-size: 1.6rem;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: 'Grandstander', sans-serif;\r\n}\r\n th, td {\r\n   text-align: center;\r\n }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nexport const StyledButtonLink = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  width: 20%;\r\n  padding: 1rem;\r\n  height: 60px;\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 1em;\r\n  font-weight: 600;\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    background: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 10px 20px -15px red;\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nconst Button = ({ children, to }) => <StyledButtonLink to={to}>{children}</StyledButtonLink>;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { NavLink, Link, withRouter } from 'react-router-dom';\r\nimport Button from 'components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 12vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.dark};\r\n`;\r\n\r\nconst StyledButtonPlace = styled.div`\r\n  width: 50%;\r\n  height: inherit;\r\n  display: inline-flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLogo = styled.div`\r\n  width: 30%;\r\n  height: 60px;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  text-align: center;\r\n  line-height: 60px;\r\n  /* background: transparent; */\r\n`;\r\n\r\nconst ButtonIcon = styled(Link)`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 20px;\r\n  margin-right: 1%;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: 50% 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => (\r\n  <Bar>\r\n    <StyledButtonPlace>\r\n      <StyledLogo>Your Note & ToDo </StyledLogo>\r\n      <Button to=\"/todos\">todos</Button>\r\n      <Button to=\"/notes\">notes</Button>\r\n    </StyledButtonPlace>\r\n    <ButtonIcon to=\"signin\" icon={logoutIcon} />\r\n  </Bar>\r\n);\r\n\r\nexport default NavBar;\r\n","import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    this: 300,\r\n    regular: 400,\r\n    bold: 600,\r\n  },\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n  media: {\r\n    phone: '@media(min-width: 1024px)',\r\n    desktop: '@media(min-width: 724px)',\r\n  },\r\n};\r\n","export const colors = {\r\n  white: '#ffffff',\r\n  primary: '#3ec2e9',\r\n  dark: '#0f1c21',\r\n  // hover: '#'\r\n};\r\n","import React from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\n\r\nconst StyledWrapper = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  /* display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  background: ${({ theme }) => theme.colors.dark};\r\n  /* position: relative; */\r\n`;\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <StyledWrapper>\r\n      <NavBar />\r\n      {children}\r\n    </StyledWrapper>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n","import TodoItem from 'components/Todo/TodoItem';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\r\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\r\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\r\n  projectId: 'notes-and-todos-6756c',\r\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\r\n  messagingSenderId: '432462096709',\r\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\r\n  measurementId: 'G-LL8BYZF9S7',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const DATABASE_URL = firebaseConfig.databaseURL;\r\n","// TodoItem.js\r\nimport React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport editIcon from 'assets/icons/edit.svg';\r\nimport saveIcon from 'assets/icons/save.svg';\r\nimport deleteIcon from 'assets/icons/trash.svg';\r\nimport { DATABASE_URL } from 'utils/database';\r\n\r\nconst StyledTdWithHover = styled.td`\r\n  width: 30vw;\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 8vw;\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst TodoItem = ({ todo, index, onSave, onEdit }) => {\r\n  const [isEdited, setIsEdited] = useState(false);\r\n  const [value, setValue] = useState(todo);\r\n\r\n  // const handleOnEdit = editID => {\r\n  //   onEdit(editID);\r\n  // };\r\n\r\n  // const handleChangeValue = e => setValue(...value, (content = e.target.value));\r\n\r\n  const handleOnDelete = () => {\r\n    console.log(`deleted`);\r\n  };\r\n\r\n  return (\r\n    <tr key={todo.id}>\r\n      {/* {console.log(`todo item`, todo)} */}\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle text-xl-left\" as=\"td\">\r\n        {todo.content}\r\n      </StyledTdWithHover>\r\n\r\n      <td className=\"align-middle\">\r\n        <StyledButton onClick={() => onEdit(todo.id)}>\r\n          <img src={editIcon} />{' '}\r\n        </StyledButton>\r\n      </td>\r\n      <td className=\"align-middle\">\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <img src={deleteIcon} />\r\n        </StyledButton>\r\n      </td>\r\n      <StyledTdWithHover deadline className=\"align-middle\" as=\"td\">\r\n        {' '}\r\n        {todo.deadline}\r\n      </StyledTdWithHover>\r\n      <td className=\"align-middle\">{todo.completed ? '✔️' : '❌'}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport saveIcon from 'assets/icons/save.svg';\r\nimport deleteIcon from 'assets/icons/trash.svg';\r\n\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport { DATABASE_URL } from 'utils/database';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 30vw;\r\n  /* margin-top: 1rem;\r\n  margin-bottom: 1rem; */\r\n  padding: 8px 16px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 8vw;\r\n    `}\r\n`;\r\n\r\nclass TodoInput extends React.Component {\r\n  state = {\r\n    content: this.props.todo.content,\r\n    deadline: this.props.todo.deadline,\r\n  };\r\n\r\n  handleOnSave = id => {\r\n    fetch(`${DATABASE_URL}/todos/${id}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(this.state),\r\n    }).then(() => {\r\n      this.props.onSave(id);\r\n    });\r\n  };\r\n\r\n  handleOnDelete = () => {\r\n    console.log(`deleted`);\r\n  };\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: [e.target.value],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todo, index } = this.props;\r\n    const { content, deadline } = this.state;\r\n    return (\r\n      <>\r\n        <tr key={todo.id}>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">\r\n            <StyledInput name=\"content\" value={content} onChange={this.handleInputChange} />\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n            <StyledButton onClick={() => this.handleOnSave(todo.id)}>\r\n              <img src={saveIcon} alt=\"save icon\" />\r\n            </StyledButton>\r\n          </td>\r\n          <td className=\"align-middle\">\r\n            <StyledButton onClick={this.handleOnDelete}>\r\n              <img src={deleteIcon} />\r\n            </StyledButton>\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n            <StyledInput\r\n              name=\"deadline\"\r\n              deadline\r\n              value={deadline}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\">{todo.completed ? '✔️' : '❌'}</td>\r\n        </tr>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport { StyledH1 } from 'components/H1/H1';\r\nimport TodoItem from 'components/Todo/TodoItem';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Todoinput from 'components/Todo/TodoInput';\r\nimport { DATABASE_URL } from 'utils/database';\r\nimport { render } from '@testing-library/react';\r\nimport TodoInput from 'components/Todo/TodoInput';\r\n\r\n// const data = [\r\n//   {\r\n//     id: 1,\r\n//     content: 'jakies zadanie do zrobienia',\r\n//     deadline: 'jutro 12',\r\n//     completed: false,\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     content: 'drugie zadanie',\r\n//     deadline: '2020.12.03',\r\n//     completed: true,\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     content: 'trzecie zadanie',\r\n//     deadline: '2020.11.03',\r\n//     completed: true,\r\n//   },\r\n// ];\r\n\r\nconst StyledTodoList = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  margin-top: 12vh;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nclass Todos extends React.Component {\r\n  state = {\r\n    todos: {},\r\n    isLoading: true,\r\n    editID: null,\r\n  };\r\n\r\n  fetchTodos = () => {\r\n    fetch(`${DATABASE_URL}/todos.json`)\r\n      .then(r => r.json())\r\n      .then(todos => {\r\n        const arrayTodos = todos\r\n          ? Object.keys(todos).map(key => {\r\n              return {\r\n                id: key,\r\n                ...todos[key],\r\n              };\r\n            })\r\n          : [];\r\n        // console.log(arrayTodos);\r\n        this.setState({\r\n          todos: arrayTodos,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  // resetEditId = () => {\r\n  //   setEditedID(null);\r\n  // };\r\n  componentDidMount() {\r\n    this.fetchTodos();\r\n  }\r\n\r\n  saveClicked = editID => {\r\n    console.log(this.state.todos);\r\n    this.fetchTodos();\r\n    this.setState({\r\n      editID: null,\r\n    });\r\n  };\r\n\r\n  handleEdit = editID => {\r\n    this.setState({ editID });\r\n  };\r\n\r\n  render() {\r\n    const { todo } = this.props;\r\n    const { isLoading } = this.state;\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <MainLayout>\r\n          <StyledTodoList>\r\n            <StyledH1>todos list</StyledH1>\r\n            <StyledTable striped responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Content</th>\r\n                  <th>Edit</th>\r\n                  <th>Remove</th>\r\n                  <th>Deadline</th>\r\n                  <th>Completed</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {isLoading ? (\r\n                  <tr>\r\n                    <td colSpan={12}>\r\n                      <Spinner animation=\"border\" />\r\n                    </td>\r\n                  </tr>\r\n                ) : (\r\n                  this.state.todos\r\n                    // .filter(todo => {\r\n                    //   const textFilter = todo.title\r\n                    //     .toLowerCase()\r\n                    //     .includes(this.state.filter.toLowerCase());\r\n\r\n                    //   if (this.state.showCompleted && this.state.showInCompleted) {\r\n                    //     return textFilter;\r\n                    //   } else if (this.state.showCompleted) {\r\n                    //     return textFilter && todo.completed === true;\r\n                    //   } else if (this.state.showInCompleted) {\r\n                    //     return textFilter && todo.completed === false;\r\n                    //   } else {\r\n                    //     return false;\r\n                    //   }\r\n                    // })\r\n                    .map((todo, index) => (\r\n                      <>\r\n                        {/* {console.log(`todo`, todo)} */}\r\n\r\n                        {this.state.editID === todo.id ? (\r\n                          <TodoInput\r\n                            key={todo.id}\r\n                            index={index}\r\n                            todo={todo}\r\n                            onSave={() => this.saveClicked(todo.id)}\r\n                          />\r\n                        ) : (\r\n                          <TodoItem\r\n                            key={todo.id}\r\n                            index={index}\r\n                            todo={todo}\r\n                            onEdit={() => this.handleEdit(todo.id)}\r\n                          />\r\n                        )}\r\n                      </>\r\n                    ))\r\n                )}\r\n              </tbody>\r\n            </StyledTable>\r\n          </StyledTodoList>\r\n        </MainLayout>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Todos;\r\n","import React, { useState } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport GlobalStyles from 'Theme/GlobalStyle';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <MainLayout />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport MainLayout from 'Layout/MainLayout';\r\n\r\nconst Notes = () => (\r\n  <MainLayout>\r\n    <h1 style={{ color: 'white' }}>my private notes</h1>;\r\n  </MainLayout>\r\n);\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\n\r\nconst SignIn = () => <h1>please Sign In </h1>;\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Switch, Link, Route } from 'react-router-dom';\r\nimport Todos from 'components/views/Todos';\r\nimport App from 'components/views/App';\r\nimport Notes from 'components/views/Notes';\r\nimport SignIn from 'components/views/SignIn';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route path=\"/todos\" component={Todos} />\r\n          <Route path=\"/notes\" component={Notes} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/views/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/trash.32c27c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.0ca9bd28.svg\";"],"sourceRoot":""}
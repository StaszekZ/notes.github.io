{"version":3,"sources":["assets/icons/logout.svg","Theme/GlobalStyle.js","utils/database.js","reducers/todosReducer.js","reducers/modalReducer.js","reducers/notesReducer.js","store/index.js","components/context/context.js","components/context/withContext.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/Form/Form.js","components/Modal/Modal.js","Layout/MainLayout.js","components/H1/H1.js","components/views/Todos.js","Layout/HomePageLayout.js","components/views/Home.js","components/Notes/NoteDetails.js","components/Notes/NoteItem.js","components/views/Notes.js","components/views/SignIn.js","components/context/contextLayout.js","components/views/Root.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","initialState","todos","isLoading","editID","error","fetchWithoutLoading","dispatch","fetch","then","r","json","arrayTodos","Object","keys","map","key","id","type","payload","setTodos","addNewTask","taskData","method","body","JSON","stringify","editTask","task","editedId","isModalOpen","toggleModalOpen","notes","fetchNotesWithoutLoading","arrayNotes","reverse","setNotes","middleware","applyMiddleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","todosReducer","state","action","modalReducer","notesReducer","store","createStore","PageContext","React","createContext","withContext","Component","props","Consumer","context","pageContext","StyledButton","styled","Link","theme","colors","white","primary","media","phone","fontSize","xs","landscape","s","modal","css","homePage","dark","ButtonLink","children","to","Bar","div","isBig","StyledButtonPlace","ButtonIcon","icon","active","NavBar","Button","logoutIcon","blur","font","this","regular","bold","xxs","m","l","xl","tablet","StyledTdWithHover","td","deadline","StyledTd","button","TodoItem","title","completed","index","onEdit","onDelete","onCompleteCheck","className","onClick","faEdit","faTrashAlt","faCheck","color","faTimes","StyledInput","input","TodoInput","handleOnSave","onSave","onEnterSave","e","handleInputChange","setState","target","name","value","handleCompletedCheck","onChange","onKeyDown","faSave","handleOnDelete","mapDispatchToProps","connect","StyledLabel","label","StyledModalInput","StyledTextarea","textarea","StyledForm","form","StyledButtonWrapper","AddTask","content","created","putDataInDatabase","addNewNote","console","log","handleOnAddClick","preventDefault","alert","handleOnChange","onQuit","getCreationDate","Date","getDate","getMonth","getFullYear","htmlFor","placeholder","faPlus","faUndo","noteData","StyledWrapper","isVisible","Modal","onAdd","StyledAddItemButton","onAddFetch","StyledH1","h1","StyledH2","h2","StyledTodoList","StyledTable","Table","StyledButtonClear","StyledFiltersWrapper","fetchTodos","setCompleted","completedId","deleteTask","deletedId","useState","setEditedID","filterTitle","setFilterTitle","filterDeadline","setFilterDeadline","useEffect","handleEdit","editedID","striped","responsive","colSpan","Spinner","animation","filter","todo","toLowerCase","includes","length","HomePageLayout","Home","style","Wrapper","NoteDetails","onClose","date","NoteItem","detailsVisible","setDetailsVisible","handleToggleShow","StyledNotesList","fetchNotes","note","SignIn","withRouter","pageType","setPageType","pathname","location","page","currentPage","Provider","Root","basename","process","exact","path","component","Todos","Notes","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.717a7697.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.4a3642db.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml{\r\n  font-size: 62.5%;\r\n\r\n}\r\n\r\n\r\nbody{\r\n  font-size: 1.6rem;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: 'Nunito', sans-serif;\r\n  background-color: #0f1c21;\r\n  /* background-color: pink; */\r\n\r\n  \r\n th, td {\r\n   text-align: center;\r\n }}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import firebase from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\r\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\r\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\r\n  projectId: 'notes-and-todos-6756c',\r\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\r\n  messagingSenderId: '432462096709',\r\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\r\n  measurementId: 'G-LL8BYZF9S7',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const DATABASE_URL = firebaseConfig.databaseURL;\r\n","import { DATABASE_URL } from 'utils/database';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  isLoading: false,\r\n  editID: null,\r\n  error: null,\r\n};\r\n\r\n//actions\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_TODOS = 'SET_TODOS';\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TODOS:\r\n      return {\r\n        error: null,\r\n        isLoading: false,\r\n        editID: null,\r\n        todos: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setTodos = todos => ({ type: SET_TODOS, payload: todos });\r\n\r\nconst fetchWithoutLoading = () => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos.json`)\r\n      .then(r => r.json())\r\n      .then(todos => {\r\n        const arrayTodos = todos\r\n          ? Object.keys(todos).map(key => {\r\n              return {\r\n                id: key,\r\n                ...todos[key],\r\n              };\r\n            })\r\n          : [];\r\n        dispatch(setTodos(arrayTodos));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setCompleted = (completedId, title, deadline, completed) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${completedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        title,\r\n        deadline,\r\n        completed: !completed,\r\n      }),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchTodos = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    dispatch(fetchWithoutLoading());\r\n  };\r\n};\r\n\r\nexport const addNewTask = taskData => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(taskData),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTask = deletedId => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const editTask = (task, editedId) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${editedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(task),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n","const initialState = {\r\n  isModalOpen: false,\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_MODAL':\r\n      return {\r\n        isModalOpen: !state.isModalOpen,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toggleModalOpen = () => ({ type: 'TOGGLE_MODAL' });\r\n","import { DATABASE_URL } from 'utils/database';\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  isLoading: false,\r\n  editID: null,\r\n  error: null,\r\n};\r\n\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_NOTES = 'SET_NOTES';\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTES:\r\n      return {\r\n        error: null,\r\n        isLoading: false,\r\n        editID: null,\r\n        notes: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setNotes = notes => ({ type: SET_NOTES, payload: notes });\r\n\r\nconst fetchNotesWithoutLoading = () => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes.json`)\r\n      .then(r => r.json())\r\n      .then(notes => {\r\n        const arrayNotes = notes\r\n          ? Object.keys(notes)\r\n              .map(key => {\r\n                return {\r\n                  id: key,\r\n                  ...notes[key],\r\n                };\r\n              })\r\n              .reverse()\r\n          : [];\r\n        dispatch(setNotes(arrayNotes));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchNotes = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    dispatch(fetchNotesWithoutLoading());\r\n  };\r\n};\r\n\r\nexport const addNewNote = noteData => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(noteData),\r\n    }).then(() => {\r\n      dispatch(fetchNotesWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteNote = deletedId => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      dispatch(fetchNotesWithoutLoading());\r\n    });\r\n  };\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { todosReducer } from 'reducers/todosReducer';\r\nimport { modalReducer } from 'reducers/modalReducer';\r\nimport {notesReducer} from 'reducers/notesReducer';\r\n\r\nconst middleware = applyMiddleware(thunk);\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(middleware);\r\n\r\nconst combinedReducers = combineReducers({ todosReducer, modalReducer, notesReducer });\r\n\r\nconst store = createStore(combinedReducers, enhancer);\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst PageContext = React.createContext('todos');\r\n\r\nexport default PageContext;\r\n","import React from 'react';\r\nimport PageContext from 'components/context/context';\r\n\r\nconst withContext = Component => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {context => <Component {...props} pageContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledButton = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  width: 20%;\r\n  padding: 1rem;\r\n  height: 50px;\r\n  background: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    background: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-size: ${({ theme }) => theme.fontSize.xs};\r\n    width: 50px;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 30px;\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 10px 20px -15px ${({ theme }) => theme.colors.primary};\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n  }\r\n  ${({ modal }) =>\r\n    modal &&\r\n    css`\r\n      width: 40%;\r\n    `}\r\n  ${({ homePage }) =>\r\n    homePage &&\r\n    css`\r\n      height: 100px;\r\n      box-shadow: -5px 3px 15px rgba(62, 194, 233, 0.3);\r\n      width: 40%;\r\n\r\n      background-color: ${({ theme }) => theme.colors.dark};\r\n      border: 3px solid ${({ theme }) => theme.colors.primary};\r\n      ${({ theme }) => theme.media.phone} {\r\n        background: ${({ theme }) => theme.colors.dark};\r\n        color: ${({ theme }) => theme.colors.primary};\r\n        font-size: ${({ theme }) => theme.fontSize.xs};\r\n        width: 40%;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ButtonLink = ({ children, to, homePage }) => (\r\n  <StyledButton homePage={homePage} to={to}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nexport default ButtonLink;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport ButtonLink from 'components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\n\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 12vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.dark};\r\n  z-index: 2;\r\n`;\r\n\r\nconst StyledButtonPlace = styled.div`\r\n  width: 50%;\r\n  height: inherit;\r\n  display: inline-flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonIcon = styled(Link)`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 20px;\r\n  margin-right: 1%;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: 50% 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n  ${({theme})=> theme.media.landscape}{\r\n  width: 30px;\r\n  height: 30px;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => (\r\n  <Bar>\r\n    <StyledButtonPlace>\r\n      <ButtonLink to=\"/home\">home</ButtonLink>\r\n      <ButtonLink to=\"/todos\">todos</ButtonLink>\r\n      <ButtonLink to=\"/notes\">notes</ButtonLink>\r\n    </StyledButtonPlace>\r\n    <ButtonIcon to=\"/signin\" icon={logoutIcon} />\r\n  </Bar>\r\n);\r\n\r\nexport default NavBar;\r\n","import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    this: 300,\r\n    regular: 400,\r\n    bold: 600,\r\n  },\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n  media: {\r\n    phone: '@media(max-width: 520px)',\r\n    tablet: '@media(max-width: 768px)',\r\n    landscape: '@media(max-width: 736px) and (orientation: landscape) ',\r\n  },\r\n};\r\n","export const colors = {\r\n  white: '#ffffff',\r\n  primary: '#3ec2e9',\r\n  dark: '#0f1c21',\r\n  blur: 'grey'\r\n  // hover: '#'\r\n};\r\n","// TodoItem.js\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const StyledTdWithHover = styled.td`\r\n  width: 50%;\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 10vw;\r\n    `}\r\n`;\r\n\r\nexport const StyledTd = styled.td`\r\n  width: fit-content;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  background: white;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 10px;\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 30px;\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nconst TodoItem = ({ title, id, deadline, completed, index, onEdit, onDelete, onCompleteCheck }) => {\r\n  const handleOnEdit = () => {\r\n    onEdit(id);\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const handleCompletedCheck = () => {\r\n    onCompleteCheck(id, title, deadline, completed);\r\n  };\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle\">{title}</StyledTdWithHover>\r\n      <StyledTdWithHover deadline className=\"align-middle\">\r\n        {deadline}\r\n      </StyledTdWithHover>\r\n      <StyledTd className=\"align-middle\">\r\n        <StyledButton onClick={handleOnEdit}>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleCompletedCheck}>\r\n          {completed ? (\r\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n          )}\r\n        </StyledButton>\r\n      </StyledTd>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport { editTask } from 'reducers/todosReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSave, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport { StyledTd } from 'components/Todo/TodoItem';\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 0.5rem 0.5rem;\r\n  float: left;\r\n  text-align: center;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nclass TodoInput extends React.Component {\r\n  state = {\r\n    title: this.props.title,\r\n    deadline: this.props.deadline,\r\n    completed: this.props.completed,\r\n  };\r\n\r\n  handleOnSave = () => {\r\n    this.props.onSave(this.state, this.props.id);\r\n  };\r\n\r\n  onEnterSave = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleOnSave();\r\n    }\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleCompletedCheck = () => {\r\n    this.props.onCompleteCheck(\r\n      this.props.id,\r\n      this.state.title,\r\n      this.state.deadline,\r\n      this.state.completed,\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { index, id } = this.props;\r\n    const { title, deadline, completed } = this.state;\r\n    return (\r\n      <>\r\n        <tr key={id}>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">\r\n            <StyledInput\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={this.handleInputChange}\r\n              onKeyDown={this.onEnterSave}\r\n            />\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n            <StyledInput\r\n              name=\"deadline\"\r\n              deadline\r\n              value={deadline}\r\n              onChange={this.handleInputChange}\r\n              onKeyDown={this.onEnterSave}\r\n            />\r\n          </td>\r\n          <StyledTd className=\"align-middle\">\r\n            <StyledButton onClick={this.handleOnSave}>\r\n              <FontAwesomeIcon icon={faSave} />\r\n            </StyledButton>\r\n\r\n            <StyledButton onClick={this.handleOnDelete}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </StyledButton>\r\n\r\n            <StyledButton onClick={this.handleCompletedCheck}>\r\n              {completed ? (\r\n                <FontAwesomeIcon icon={faCheck} color=\"green\" />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n              )}\r\n            </StyledButton>\r\n          </StyledTd>\r\n        </tr>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  editTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { StyledInput } from 'components/Todo/TodoInput';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport { addNewTask } from 'reducers/todosReducer';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { addNewNote } from 'reducers/notesReducer';\r\nimport withContext from 'components/context/withContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faUndo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledLabel = styled.label`\r\n  color: white;\r\n  display: block;\r\n`;\r\n\r\nconst StyledModalInput = styled(StyledInput)`\r\n  width: 70%;\r\n  margin: 1rem auto;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledTextarea = styled.textarea`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 70%;\r\n  height: 50%;\r\n  margin: 1rem auto;\r\n  float: left;\r\n  text-align: center;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 1.2rem;\r\n  }\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 90%;\r\n  margin-top: auto;\r\n`;\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    deadline: '',\r\n    created: '',\r\n    completed: false,\r\n  };\r\n\r\n  putDataInDatabase = () => {\r\n    const { addNewNote, addNewTask, toggleModalOpen, pageContext } = this.props;\r\n    const { title, content, deadline, created, completed } = this.state;\r\n\r\n    if (pageContext === 'todos') {\r\n      addNewTask({ title, deadline, completed });\r\n      console.log('z form TODOS', pageContext);\r\n    }\r\n    if (pageContext === 'notes') {\r\n      addNewNote({ title, content, created });\r\n      console.log('z form NOTES', pageContext);\r\n    }\r\n    toggleModalOpen();\r\n    this.setState({\r\n      title: '',\r\n      content: '',\r\n      deadline: '',\r\n      created: '',\r\n    });\r\n  };\r\n\r\n  handleOnAddClick = e => {\r\n    e.preventDefault();\r\n    if (!this.state.title) {\r\n      return alert('Please add new task or quit!');\r\n    }\r\n    this.putDataInDatabase();\r\n  };\r\n\r\n  onEnterSave = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleOnAddClick(e);\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onQuit = () => {\r\n    this.props.toggleModalOpen();\r\n  };\r\n\r\n  getCreationDate = () =>\r\n    `Created: ${new Date().getDate()} . ${new Date().getMonth() + 1} . ${new Date().getFullYear()}`;\r\n\r\n  render() {\r\n    const { pageContext } = this.props;\r\n    return (\r\n      <StyledForm>\r\n        {pageContext === 'todos' && <StyledLabel htmlFor=\"newTask\">Add new task:</StyledLabel>}\r\n        {pageContext === 'notes' && <StyledLabel htmlFor=\"newNote\">Add new note:</StyledLabel>}\r\n\r\n        <StyledModalInput\r\n          name=\"title\"\r\n          placeholder={pageContext === 'todos' ? 'new task' : 'note title'}\r\n          value={this.state.title}\r\n          onChange={this.handleOnChange}\r\n          onKeyDown={this.onEnterSave}\r\n        ></StyledModalInput>\r\n\r\n        {pageContext === 'notes' && (\r\n          <StyledTextarea\r\n            name=\"content\"\r\n            placeholder=\"note content\"\r\n            value={this.state.content}\r\n            onChange={this.handleOnChange}\r\n            onKeyDown={this.onEnterSave}\r\n          ></StyledTextarea>\r\n        )}\r\n\r\n        {pageContext === 'todos' && (\r\n          <StyledModalInput\r\n            // deadline\r\n            name=\"deadline\"\r\n            placeholder=\"new deadline\"\r\n            value={this.state.deadline}\r\n            onChange={this.handleOnChange}\r\n            onKeyDown={this.onEnterSave}\r\n          ></StyledModalInput>\r\n        )}\r\n        {pageContext === 'notes' && <h2>{this.getCreationDate()}</h2>}\r\n\r\n        <StyledButtonWrapper>\r\n          <StyledButton modal=\"true\" type=\"submit\" onClick={this.handleOnAddClick}>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </StyledButton>\r\n          <StyledButton onClick={this.onQuit}>\r\n            <FontAwesomeIcon icon={faUndo} color=\"red\" />\r\n          </StyledButton>\r\n        </StyledButtonWrapper>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addNewTask,\r\n  toggleModalOpen,\r\n  addNewNote,\r\n};\r\nexport default withContext(connect(null, mapDispatchToProps)(AddTask));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AddTask from 'components/Form/Form';\r\n\r\nconst StyledWrapper = styled.div`\r\n  border: 5px solid ${({ theme }) => theme.colors.primary};\r\n  z-index: 1;\r\n  position: fixed;\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n  padding: 2rem;\r\n  flex-direction: column;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 50%;\r\n  width: 50%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  /* transform: translate(${({ isVisible }) => (isVisible ? '-100%' : '100%')}); */\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 60%;\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 60%;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ isVisible, onAdd }) => {\r\n  return (\r\n    <StyledWrapper isVisible={isVisible}>\r\n      <AddTask onAdd={onAdd}></AddTask>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport withContext from 'components/context/withContext';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledAddItemButton = styled(StyledButton)`\r\n  position: fixed;\r\n  top: 85vh;\r\n  left: 85vw;\r\n  width: 50px;\r\n  height: 50px;\r\n  z-index: 2;\r\n  display: ${({ button }) => (button ? 'flex' : 'none')};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  filter: blur(${({ isModalOpen }) => isModalOpen && '5px'});\r\n`;\r\n\r\nconst MainLayout = ({\r\n  children,\r\n  onAddFetch,\r\n  isModalOpen,\r\n  toggleModalOpen,\r\n  button,\r\n  pageContext,\r\n}) => {\r\n  const handleIsVisible = () => {\r\n    toggleModalOpen();\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    toggleModalOpen();\r\n    onAddFetch();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} isModalOpen={isModalOpen}>\r\n      <StyledAddItemButton onClick={handleIsVisible} button={button}>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </StyledAddItemButton>\r\n      <Modal onAdd={handleAddTask} isVisible={isModalOpen} />\r\n      <NavBar />\r\n      <StyledWrapper isModalOpen={isModalOpen}>{children}</StyledWrapper>\r\n      {console.log('w main layout', pageContext)}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.modalReducer.isModalOpen,\r\n});\r\nconst mapDispatchToProps = {\r\n  toggleModalOpen,\r\n};\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(MainLayout));\r\n","\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n\r\n\r\nexport const StyledH2 = styled.h2`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 3rem;\r\n  margin-bottom: 4rem;\r\n  position: relative;\r\n  top: 13vh;\r\n  /* background-color: red; */\r\n`;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport { StyledH1, StyledH2 } from 'components/H1/H1';\r\nimport TodoItem from 'components/Todo/TodoItem';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport TodoInput from 'components/Todo/TodoInput';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport withContext from 'components/context/withContext';\r\n\r\nimport { fetchTodos, addNewTask, setCompleted, deleteTask, editTask } from 'reducers/todosReducer';\r\n\r\nconst StyledTodoList = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 13vh;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 95%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  table-layout: auto;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 40%;\r\n  height: 40px;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  border-radius: 5px;\r\n  color: white;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  margin-bottom: 0.5rem;\r\n  margin-right: 0.5rem;\r\n  ${({ theme }) => theme.media.tablet} {\r\n    ::placeholder {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButtonClear = styled(StyledButton)`\r\n  width: 20%;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst StyledFiltersWrapper = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  ${({ theme }) => theme.media.tablet} {\r\n    width: 100%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Todos = ({\r\n  isLoading,\r\n  fetchTodos,\r\n  todos,\r\n  deleteTask,\r\n  setCompleted,\r\n  editTask,\r\n  pageContext,\r\n}) => {\r\n  const [editID, setEditedID] = useState('');\r\n  const [filterTitle, setFilterTitle] = useState('');\r\n  const [filterDeadline, setFilterDeadline] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleOnSave = (task, editedId) => {\r\n    editTask(task, editedId);\r\n    setEditedID(null);\r\n  };\r\n\r\n  const handleEdit = editedID => {\r\n    setEditedID(editedID);\r\n  };\r\n\r\n  const handleFilterTitleChange = e => {\r\n    setFilterTitle(e.target.value);\r\n  };\r\n  const handleFilterDeadlineChange = e => {\r\n    setFilterDeadline(e.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterTitle('');\r\n    setFilterDeadline('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainLayout onAddFetch={fetchTodos} button=\"true\">\r\n        <StyledTodoList>\r\n          <StyledH1>Todos List</StyledH1>\r\n          <StyledFiltersWrapper>\r\n            <StyledInput\r\n              placeholder=\"🔎 by title\"\r\n              value={filterTitle}\r\n              onChange={handleFilterTitleChange}\r\n            ></StyledInput>\r\n            <StyledInput\r\n              placeholder=\"🔎 by deadline\"\r\n              value={filterDeadline}\r\n              onChange={handleFilterDeadlineChange}\r\n            ></StyledInput>\r\n            <StyledButtonClear onClick={clearFilter}>Clear</StyledButtonClear>\r\n          </StyledFiltersWrapper>\r\n          <StyledTable striped responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>To Do</th>\r\n                <th>Deadline</th>\r\n                <th>Edition</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={12}>\r\n                    <Spinner animation=\"border\" />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                todos\r\n                  .filter(todo => todo.title.toLowerCase().includes(filterTitle.toLowerCase()))\r\n                  .filter(todo =>\r\n                    todo.deadline.toLowerCase().includes(filterDeadline.toLowerCase()),\r\n                  )\r\n\r\n                  //   if (this.state.showCompleted && this.state.showInCompleted) {\r\n                  //     return textFilter;\r\n                  //   } else if (this.state.showCompleted) {\r\n                  //     return textFilter && todo.completed === true;\r\n                  //   } else if (this.state.showInCompleted) {\r\n                  //     return textFilter && todo.completed === false;\r\n                  //   } else {\r\n                  //     return false;\r\n                  //   }\r\n                  // })\r\n                  .map((todo, index) =>\r\n                    editID === todo.id ? (\r\n                      <TodoInput\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        title={todo.title}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onSave={handleOnSave}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ) : (\r\n                      <TodoItem\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        title={todo.title}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onEdit={handleEdit}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ),\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTodoList>\r\n        {!isLoading && !todos.length && (\r\n          <StyledH2>Your todo list is empty! Enter new task! </StyledH2>\r\n        )}\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todosReducer.todos,\r\n  isLoading: state.todosReducer.isLoading,\r\n  error: state.todosReducer.error,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchTodos,\r\n  addNewTask,\r\n  setCompleted,\r\n  deleteTask,\r\n  editTask,\r\n};\r\n\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(Todos));\r\n","import React from 'react';\r\nimport  { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\n\r\nconst HomePageLayout = ({children}) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <NavBar />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default HomePageLayout;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomePageLayout from 'Layout/HomePageLayout';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from 'Theme/GlobalStyle';\r\nimport ButtonLink from 'components/Button/Button';\r\n\r\nconst StyledWrapper = styled.div`\r\n  /* border: 3px solid ${({theme})  => theme.colors.primary}; */\r\n   position: absolute;\r\n   top: 50%;\r\n   left: 50%;\r\n   height: 50%;\r\n   width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n  transform: translate(-50%, -50%);\r\n  background-color: ${({theme})  => theme.colors.dark};\r\n  transition: transform 0.25s ease-in-out;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n display: flex;\r\n justify-content: space-evenly;\r\n align-items: center;\r\n width: 90%;\r\n height: 50%;\r\n`;\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <HomePageLayout>\r\n        <StyledWrapper>\r\n          <h1 style={{color: 'white'}}>In this app you can store your: </h1>\r\n          <StyledButtonWrapper>\r\n             <ButtonLink homePage='true' to='/todos'>todos</ButtonLink>\r\n             <ButtonLink homePage='true' to='/notes'>notes</ButtonLink>\r\n             </StyledButtonWrapper>\r\n        </StyledWrapper>\r\n       </HomePageLayout>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border: 5px solid ${({ theme }) => theme.colors.primary};\r\n  z-index: 1;\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n  padding: 2rem;\r\n  flex-direction: column;\r\n  height: 50vh;\r\n  width: 50%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 60%;\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 60%;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst NoteDetails = ({ isVisible, content, onClose, title, date }) => {\r\n  return (\r\n    <>\r\n      <Wrapper isVisible={isVisible}>\r\n        <h1>{title}</h1>\r\n        <p>{content}</p>\r\n        <p>{date}</p>\r\n        <button onClick={onClose}>Close</button>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\r\nimport { StyledTdWithHover } from 'components/Todo/TodoItem';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport NoteDetails from 'components/Notes/NoteDetails';\r\n\r\nconst NoteItem = ({ title, date, index, id, content }) => {\r\n  const [detailsVisible, setDetailsVisible] = useState(false);\r\n\r\n  const handleToggleShow = () => {\r\n    setDetailsVisible(!detailsVisible);\r\n  };\r\n  const handleOnDelete = () => {\r\n    console.log('deleted');\r\n  };\r\n  return (\r\n    <>\r\n      <tr key={id}>\r\n        <td className=\"align-middle\">{index + 1}</td>\r\n        <StyledTdWithHover className=\"align-middle\">{title}</StyledTdWithHover>\r\n        <StyledTdWithHover deadline className=\"align-middle\">\r\n          {date}\r\n        </StyledTdWithHover>\r\n        <td className=\"align-middle\">\r\n          <StyledButton onClick={handleToggleShow}>\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </StyledButton>\r\n          <StyledButton onClick={handleOnDelete}>\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </StyledButton>\r\n        </td>\r\n        <NoteDetails\r\n          isVisible={detailsVisible}\r\n          onClose={handleToggleShow}\r\n          content={content}\r\n          title={title}\r\n          date={date}\r\n        />\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteItem;\r\n","import React, { useEffect } from 'react';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport { StyledH2 } from 'components/H1/H1';\r\nimport { connect } from 'react-redux';\r\nimport withContext from 'components/context/withContext';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { fetchNotes } from 'reducers/notesReducer';\r\nimport NoteItem from 'components/Notes/NoteItem';\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  table-layout: auto;\r\n`;\r\n\r\nconst StyledNotesList = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 13vh;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 95%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst Notes = ({ fetchNotes, notes, isLoading, pageContext }) => {\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainLayout onAddFetch={fetchNotes} button=\"true\">\r\n        <StyledH2>my private notes</StyledH2>;\r\n        <StyledNotesList>\r\n          <StyledTable striped responsive>\r\n            {/* {console.log('pageContext w notes ', pageContext)} */}\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Created</th>\r\n                <th>Edition</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={12}>\r\n                    <Spinner animation=\"border\" />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                notes.map((note, index) => (\r\n                  <>\r\n                    <NoteItem\r\n                      key={note.id}\r\n                      title={note.title}\r\n                      date={note.date}\r\n                      id={note.id}\r\n                      index={index}\r\n                      content={note.content}\r\n                    />\r\n                  </>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledNotesList>\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: state.notesReducer.notes,\r\n  isLoading: state.notesReducer.isLoading,\r\n  error: state.notesReducer.error,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchNotes,\r\n};\r\n\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(Notes));\r\n","import React from 'react';\r\n\r\nconst SignIn = () => <h1 style={{color: 'white'}}>please Sign In </h1>;\r\n\r\nexport default SignIn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport PageContext from 'components/context/context';\r\n\r\nconst ContextLayout = ({ children, ...props }) => {\r\n  const [pageType, setPageType] = useState('notes');\r\n\r\n  const {\r\n    location: { pathname },\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const pageTypes = ['todos', 'notes', 'home'];\r\n\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n\r\n    console.log('currentPage', currentPage);\r\n    setPageType(currentPage);\r\n  }, [pathname]);\r\n\r\n  return <PageContext.Provider value={pageType}>{children}</PageContext.Provider>;\r\n};\r\n\r\nexport default withRouter(ContextLayout);\r\n","import React from 'react';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport Todos from 'components/views/Todos';\r\nimport Home from 'components/views/Home';\r\nimport Notes from 'components/views/Notes';\r\nimport SignIn from 'components/views/SignIn';\r\nimport ContextLayout from 'components/context/contextLayout';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyle />\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <ContextLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={SignIn}>\r\n              {/* {loggedIn ? <Redirect to=\"/dashboard\" /> : <PublicHomePage />} */}\r\n              <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route path=\"/todos\" component={Todos} />\r\n            <Route path=\"/notes\" component={Notes} />\r\n            <Route path=\"/home\" component={Home} />\r\n          </Switch>\r\n        </ContextLayout>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/views/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["assets/icons/trash.svg","assets/icons/logout.svg","assets/icons/save.svg","assets/icons/edit.svg","Theme/GlobalStyle.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","utils/database.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/Form/Form.js","components/Modal/Modal.js","Layout/MainLayout.js","components/H1/H1.js","components/views/Todos.js","components/views/App.js","components/views/Notes.js","components/views/SignIn.js","components/views/Root.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","StyledButton","styled","Link","theme","colors","white","media","desktop","primary","modal","css","ButtonLink","children","to","Bar","div","isBig","dark","StyledButtonPlace","StyledLogo","ButtonIcon","icon","active","NavBar","Button","logoutIcon","font","this","regular","bold","fontSize","xxs","xs","s","m","l","xl","phone","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","StyledTdWithHover","td","deadline","button","TodoItem","content","id","completed","index","onEdit","onDelete","key","className","as","onClick","src","editIcon","deleteIcon","StyledInput","input","TodoInput","state","props","handleOnSave","fetch","method","body","JSON","stringify","then","onSave","handleOnDelete","console","log","handleInputChange","e","setState","target","name","value","onChange","saveIcon","alt","React","Component","StyledLabel","label","StyledModalInput","StyledForm","form","AddTask","putDataInDatabase","onAdd","handleOnInputClick","preventDefault","alert","handleOnChange","htmlFor","placeholder","type","StyledWrapper","isVisible","Modal","StyledAddItemButton","MainLayout","useState","isNewItemBarVisible","setIsNewItemBarVisible","prevState","StyledH1","h1","StyledH2","h2","StyledTodoList","StyledTable","Table","Todos","todos","isLoading","editID","fetchTodos","r","json","arrayTodos","Object","keys","map","saveClicked","handleEdit","handleDeleteClick","deletedId","length","striped","responsive","colSpan","Spinner","animation","todo","App","Notes","style","color","SignIn","Root","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a66209e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash.32c27c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.4a3642db.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.0ca9bd28.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.2d229d35.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Grandstander:wght@100;300;500;800&display=swap');\r\n\r\n*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml{\r\n  font-size: 62.5%;\r\n}\r\n\r\nbody{\r\n  font-size: 1.6rem;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: 'Grandstander', sans-serif;\r\n}\r\n th, td {\r\n   text-align: center;\r\n }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { NavLink, Link, useRouteMatch } from 'react-router-dom';\r\n\r\nexport const StyledButton = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  width: 20%;\r\n  padding: 1rem;\r\n  height: 60px;\r\n  background: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-size: 1em;\r\n  font-weight: 600;\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  ${({ theme }) => theme.media.desktop} {\r\n    background: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 10px 20px -15px red;\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n  }\r\n  ${({ modal }) => modal && css`\r\n   width: 40%;\r\n   margin-top: 2rem;\r\n  `}\r\n`;\r\n\r\nconst ButtonLink = ({ children, to }) => <StyledButton to={to}>{children}</StyledButton>;\r\n\r\nexport default ButtonLink;\r\n","import React from 'react';\r\nimport { NavLink, Link, withRouter } from 'react-router-dom';\r\nimport ButtonLink from 'components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 12vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.dark};\r\n`;\r\n\r\nconst StyledButtonPlace = styled.div`\r\n  width: 50%;\r\n  height: inherit;\r\n  display: inline-flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledLogo = styled.div`\r\n  width: 30%;\r\n  height: 60px;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  text-align: center;\r\n  line-height: 60px;\r\n  /* background: transparent; */\r\n`;\r\n\r\nconst ButtonIcon = styled(Link)`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 20px;\r\n  margin-right: 1%;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: 50% 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => (\r\n  <Bar>\r\n    <StyledButtonPlace>\r\n      <StyledLogo>Your Note & ToDo </StyledLogo>\r\n      <ButtonLink to=\"/todos\">todos</ButtonLink>\r\n      <ButtonLink to=\"/notes\">notes</ButtonLink>\r\n    </StyledButtonPlace>\r\n    <ButtonIcon to=\"signin\" icon={logoutIcon} />\r\n  </Bar>\r\n);\r\n\r\nexport default NavBar;\r\n","import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    this: 300,\r\n    regular: 400,\r\n    bold: 600,\r\n  },\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n  media: {\r\n    phone: '@media(min-width: 1024px)',\r\n    desktop: '@media(min-width: 724px)',\r\n  },\r\n};\r\n","export const colors = {\r\n  white: '#ffffff',\r\n  primary: '#3ec2e9',\r\n  dark: '#0f1c21',\r\n  // hover: '#'\r\n};\r\n","import TodoItem from 'components/Todo/TodoItem';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\r\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\r\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\r\n  projectId: 'notes-and-todos-6756c',\r\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\r\n  messagingSenderId: '432462096709',\r\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\r\n  measurementId: 'G-LL8BYZF9S7',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const DATABASE_URL = firebaseConfig.databaseURL;\r\n","// TodoItem.js\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport editIcon from 'assets/icons/edit.svg';\r\nimport deleteIcon from 'assets/icons/trash.svg';\r\nimport { DATABASE_URL } from 'utils/database';\r\n\r\nconst StyledTdWithHover = styled.td`\r\n  width: 30vw;\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 8vw;\r\n    `}\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst TodoItem = ({ content, id, deadline, completed, index, onEdit, onDelete }) => {\r\n  const handleOnEdit = () => {\r\n    onEdit(id);\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle text-xl-left\" as=\"td\">\r\n        {content}\r\n      </StyledTdWithHover>\r\n      <td className=\"align-middle\">\r\n        <StyledButton onClick={handleOnEdit}>\r\n          <img src={editIcon} />{' '}\r\n        </StyledButton>\r\n      </td>\r\n      <td className=\"align-middle\">\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <img src={deleteIcon} />\r\n        </StyledButton>\r\n      </td>\r\n      <StyledTdWithHover deadline className=\"align-middle\" as=\"td\">\r\n        {deadline}\r\n      </StyledTdWithHover>\r\n      <td className=\"align-middle\">{completed ? '✔️' : '❌'}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport saveIcon from 'assets/icons/save.svg';\r\nimport deleteIcon from 'assets/icons/trash.svg';\r\n\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport { DATABASE_URL } from 'utils/database';\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 30vw;\r\n  /* margin-top: 1rem;\r\n  margin-bottom: 1rem; */\r\n  padding: 8px 16px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 8vw;\r\n    `}\r\n`;\r\n\r\nclass TodoInput extends React.Component {\r\n  state = {\r\n    content: this.props.content,\r\n    deadline: this.props.deadline,\r\n    completed: this.props.completed,\r\n  };\r\n\r\n  handleOnSave = () => {\r\n    fetch(`${DATABASE_URL}/todos/${this.props.id}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(this.state),\r\n    }).then(() => {\r\n      this.props.onSave(this.props.id);\r\n    });\r\n  };\r\n\r\n  handleOnDelete = () => {\r\n    console.log(`deleted`);\r\n  };\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { index, id } = this.props;\r\n    const { content, deadline, completed } = this.state;\r\n    return (\r\n      <>\r\n        <tr key={id}>\r\n          <td className=\"align-middle\">{index + 1}</td>\r\n          <td className=\"align-middle\">\r\n            <StyledInput name=\"content\" value={content} onChange={this.handleInputChange} />\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n            <StyledButton onClick={this.handleOnSave}>\r\n              <img src={saveIcon} alt=\"save icon\" />\r\n            </StyledButton>\r\n          </td>\r\n          <td className=\"align-middle\">\r\n            <StyledButton onClick={this.handleOnDelete}>\r\n              <img src={deleteIcon} />\r\n            </StyledButton>\r\n          </td>\r\n\r\n          <td className=\"align-middle\">\r\n            <StyledInput\r\n              name=\"deadline\"\r\n              deadline\r\n              value={deadline}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\">{completed ? '✔️' : '❌'}</td>\r\n        </tr>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoInput;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledInput } from 'components/Todo/TodoInput'\r\nimport { StyledButton } from 'components/Button/Button'\r\nimport { DATABASE_URL } from 'utils/database';\r\n\r\n\r\nconst StyledLabel = styled.label`\r\n   color: white;\r\n   display: block;\r\n`;\r\n\r\n\r\nconst StyledModalInput = styled(StyledInput)`\r\nwidth: 70%;\r\nmargin: 1rem auto;\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-items: center;\r\n`;\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    content: '',\r\n    deadline: '',\r\n    completed: false,\r\n  };\r\n\r\n  putDataInDatabase = () => {\r\n    fetch(`${DATABASE_URL}/todos/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(this.state),\r\n    })\r\n      .then(() => {\r\n        this.props.onAdd();\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          content: '',\r\n          deadline: '',\r\n        });\r\n      });\r\n  };\r\n\r\n  handleOnInputClick = e => {\r\n    e.preventDefault();\r\n    if (!this.state.content) {\r\n      return alert('wprowadź zadanie');\r\n    }\r\n    this.putDataInDatabase();\r\n\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <StyledForm>\r\n        <StyledLabel htmlFor=\"newTask\">Dodaj zadanie:</StyledLabel>\r\n        <StyledModalInput\r\n          name=\"content\"\r\n          placeholder=\"wprowadź nowe zadanie\"\r\n          value={this.state.content}\r\n          onChange={this.handleOnChange}\r\n        ></StyledModalInput>\r\n        <StyledModalInput deadline\r\n          name=\"deadline\"\r\n          placeholder=\"wprowadź deadline\"\r\n          value={this.state.deadline}\r\n          onChange={this.handleOnChange}\r\n        ></StyledModalInput>\r\n        <StyledButton modal type=\"submit\" onClick={this.handleOnInputClick}>\r\n          Dodaj zadanie\r\n        </StyledButton>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport { theme } from 'utils/theme';\r\nimport AddTask from 'components/Form/Form'\r\n\r\nconst StyledWrapper = styled.div`\r\nborder: 5px solid ${({ theme }) => theme.colors.primary};\r\nz-index: 1;\r\nposition: fixed;\r\ndisplay: ${({ isVisible }) => isVisible ? 'flex' : 'none'};\r\npadding: 2rem;\r\nflex-direction: column;\r\ntop: 50%;\r\nleft: 50%;\r\ntransform: translate(-50%, -50%);\r\nheight: 50%;\r\nwidth: 50%;\r\nbackground-color: ${({ theme }) => theme.colors.dark};\r\nbox-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n/* transform: translate(${({ isVisible }) => (isVisible ? '-100%' : '100%')}); */\r\ntransition: transform 0.25s ease -in -out;\r\n`;\r\n\r\n\r\n\r\nconst Modal = ({ isVisible, onAdd }) => {\r\n\r\n\treturn (\r\n\t\t<StyledWrapper isVisible={isVisible}>\r\n\t\t\t<AddTask onAdd={onAdd}></AddTask>\r\n\t\t</StyledWrapper>\r\n\t)\r\n};\r\n\r\n\r\n\r\nexport default Modal;","import React, { useState } from 'react';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal'\r\n\r\n\r\nconst StyledAddItemButton = styled(StyledButton)`\r\nposition: fixed;\r\ntop: 90%;\r\nleft: 90%;\r\nwidth: 60px;\r\nheight: 60px;\r\nz-index: 2;\r\n\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  min-height: 100vh;\r\n  width: 100%;\r\n  /* display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  background: ${({ theme }) => theme.colors.dark};\r\n  /* position: relative; */\r\n`;\r\n\r\n\r\n\r\nconst MainLayout = ({ children, onAdd }) => {\r\n\r\n  const [isNewItemBarVisible, setIsNewItemBarVisible] = useState(false);\r\n\r\n  const handleIsVisible = () => {\r\n    setIsNewItemBarVisible(prevState => !prevState);\r\n  };\r\n\r\n  const isModalOpen = () => {\r\n    setIsNewItemBarVisible(prevState => !prevState);\r\n    onAdd();\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <StyledWrapper>\r\n        <NavBar />\r\n        <>\r\n          {children}\r\n          <StyledAddItemButton onClick={handleIsVisible}>➕</StyledAddItemButton>\r\n          <Modal onAdd={isModalOpen} isVisible={isNewItemBarVisible} />\r\n        </>\r\n      </StyledWrapper>\r\n    </ThemeProvider>\r\n  )\r\n\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 1rem;\r\n`;\r\n\r\n\r\nexport const StyledH2 = styled.h2`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 3rem;\r\n  margin-bottom: 4rem;\r\n  /* background-color: red; */\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport { StyledH1 } from 'components/H1/H1';\r\nimport { StyledH2 } from 'components/H1/H1'\r\nimport TodoItem from 'components/Todo/TodoItem';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { DATABASE_URL } from 'utils/database';\r\nimport TodoInput from 'components/Todo/TodoInput';\r\nimport AddTask from 'components/Form/Form';\r\n\r\nconst StyledTodoList = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  margin-top: 12vh;\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\n\r\nclass Todos extends React.Component {\r\n  state = {\r\n    todos: [],\r\n    isLoading: true,\r\n    editID: null,\r\n  };\r\n\r\n  fetchTodos = () => {\r\n    fetch(`${DATABASE_URL}/todos.json`)\r\n      .then(r => r.json())\r\n      .then(todos => {\r\n        const arrayTodos = todos\r\n          ? Object.keys(todos).map(key => {\r\n            return {\r\n              id: key,\r\n              ...todos[key],\r\n            };\r\n          })\r\n          : [];\r\n        console.log(arrayTodos);\r\n        this.setState({\r\n          todos: arrayTodos,\r\n          isLoading: false,\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchTodos();\r\n  }\r\n  saveClicked = editID => {\r\n    this.fetchTodos();\r\n    this.setState({\r\n      editID: null,\r\n    });\r\n  };\r\n\r\n  handleEdit = editID => {\r\n    this.setState({ editID });\r\n  };\r\n\r\n  handleDeleteClick = deletedId => {\r\n    fetch(`${DATABASE_URL}/todos/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      this.fetchTodos();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, todos, editID } = this.state;\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <MainLayout onAdd={this.fetchTodos}>\r\n          <StyledTodoList>\r\n            {todos.length ? (\r\n              <>\r\n                <StyledH1>todos list</StyledH1>\r\n                <StyledTable striped responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>#</th>\r\n                      <th>Content</th>\r\n                      <th>Edit</th>\r\n                      <th>Remove</th>\r\n                      <th>Deadline</th>\r\n                      <th>Completed</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {isLoading ? (\r\n                      <tr>\r\n                        <td colSpan={12}>\r\n                          <Spinner animation=\"border\" />\r\n                        </td>\r\n                      </tr>\r\n                    ) : (\r\n                        todos\r\n                          // .filter(todo => {\r\n                          //   const textFilter = todo.title\r\n                          //     .toLowerCase()\r\n                          //     .includes(this.state.filter.toLowerCase());\r\n\r\n                          //   if (this.state.showCompleted && this.state.showInCompleted) {\r\n                          //     return textFilter;\r\n                          //   } else if (this.state.showCompleted) {\r\n                          //     return textFilter && todo.completed === true;\r\n                          //   } else if (this.state.showInCompleted) {\r\n                          //     return textFilter && todo.completed === false;\r\n                          //   } else {\r\n                          //     return false;\r\n                          //   }\r\n                          // })\r\n                          .map((todo, index) => (\r\n                            <>\r\n                              {/* {console.log(`todo`, todo)} */}\r\n\r\n                              {editID === todo.id ? (\r\n                                <TodoInput\r\n                                  key={todo.id}\r\n                                  id={todo.id}\r\n                                  index={index}\r\n                                  content={todo.content}\r\n                                  completed={todo.completed}\r\n                                  deadline={todo.deadline}\r\n                                  onSave={this.saveClicked}\r\n                                  onDelete={this.handleDeleteClick}\r\n                                />\r\n                              ) : (\r\n                                  <TodoItem\r\n                                    key={todo.id}\r\n                                    id={todo.id}\r\n                                    index={index}\r\n                                    content={todo.content}\r\n                                    completed={todo.completed}\r\n                                    deadline={todo.deadline}\r\n                                    onEdit={this.handleEdit}\r\n                                    onDelete={this.handleDeleteClick}\r\n                                  />\r\n                                )}\r\n                            </>\r\n                          ))\r\n                      )}\r\n                  </tbody>\r\n                </StyledTable>\r\n              </>\r\n            ) : (\r\n                <StyledH2>Your todo list is empty! Enter new task! </StyledH2>\r\n              )}\r\n          </StyledTodoList>\r\n          {/* <AddTask onAdd={this.fetchTodos} /> */}\r\n        </MainLayout>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Todos;\r\n","import React, { useState } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport GlobalStyles from 'Theme/GlobalStyle';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <MainLayout />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport MainLayout from 'Layout/MainLayout';\r\n\r\nconst Notes = () => (\r\n  <MainLayout>\r\n    <h1 style={{ color: 'white' }}>my private notes</h1>;\r\n  </MainLayout>\r\n);\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\n\r\nconst SignIn = () => <h1>please Sign In </h1>;\r\n\r\nexport default SignIn;\r\n","import React, { useState } from 'react';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Switch, Link, Route } from 'react-router-dom';\r\nimport Todos from 'components/views/Todos';\r\nimport App from 'components/views/App';\r\nimport Notes from 'components/views/Notes';\r\nimport SignIn from 'components/views/SignIn';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route path=\"/todos\" component={Todos} />\r\n          <Route path=\"/notes\" component={Notes} />\r\n          <Route path=\"/signin\" component={SignIn} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/views/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
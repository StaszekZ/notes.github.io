{"version":3,"sources":["assets/icons/logout.svg","Theme/GlobalStyle.js","utils/database.js","reducers/todosReducer.js","reducers/modalReducer.js","reducers/notesReducer.js","store/index.js","components/context/context.js","components/context/withContext.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/Form/Form.js","components/Modal/Modal.js","Layout/MainLayout.js","components/H1/H1.js","components/filters/Filters.js","components/views/Todos.js","Layout/HomePageLayout.js","components/views/Home.js","components/Notes/NoteItem.js","components/Notes/NoteDetails.js","components/views/Notes.js","components/views/SignIn.js","components/context/contextLayout.js","components/views/Root.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","initialState","todos","isLoading","editID","error","fetchWithoutLoading","dispatch","fetch","then","r","json","arrayTodos","Object","keys","map","key","id","type","payload","setTodos","addNewTask","taskData","method","body","JSON","stringify","editTask","task","editedId","isModalOpen","createdDate","toggleModalOpen","notes","fetchNotesWithoutLoading","arrayNotes","reverse","setNotes","middleware","applyMiddleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","todosReducer","state","action","modalReducer","Date","toLocaleString","notesReducer","store","createStore","PageContext","React","createContext","withContext","Component","props","Consumer","context","pageContext","StyledButton","styled","Link","theme","colors","white","primary","media","phone","fontSize","xs","landscape","s","modal","css","homePage","dark","ButtonLink","children","to","Bar","div","isBig","StyledButtonPlace","ButtonIcon","icon","active","NavBar","Button","logoutIcon","lightDark","blur","font","this","regular","bold","xxs","m","l","xl","tablet","StyledTdWithHover","td","deadline","created","StyledTd","button","TodoItem","title","completed","index","onEdit","onDelete","onCompleteCheck","className","onClick","faEdit","faTrashAlt","faCheck","color","faTimes","StyledInput","input","mapDispatchToProps","connect","onSave","useState","editedInput","setEditedInput","handleOnSave","onEnterSave","e","handleInputChange","target","name","value","onChange","onKeyDown","faSave","console","log","StyledLabel","label","StyledModalInput","StyledTextarea","textarea","StyledForm","form","StyledButtonWrapper","StyledDate","h3","AddTask","content","putDataInDatabase","addNewNote","setState","handleOnAddClick","preventDefault","alert","handleOnChange","onQuit","htmlFor","placeholder","faPlus","faUndo","noteData","StyledWrapper","isVisible","Modal","onAdd","StyledAddItemButton","onAddFetch","StyledH1","h1","StyledH2","h2","StyledButtonClear","StyledFiltersWrapper","onTitleFilter","onDeadlineFilter","onContentFilter","titleText","contentText","deadlineText","onClear","StyledTodoList","StyledTable","Table","fetchTodos","setCompleted","completedId","deleteTask","deletedId","setEditedID","filterTitle","setFilterTitle","filterDeadline","setFilterDeadline","useEffect","handleEdit","editedID","striped","responsive","colSpan","Spinner","animation","filter","todo","toLowerCase","includes","length","HomePageLayout","Home","style","NoteItem","showDetails","faEye","Wrapper","StyledContent","p","editNote","note","onClose","edited","setEdited","editedNote","setEditedNote","StyledNotesList","fetchNotes","deleteNote","showID","setShowID","detailsVisible","setDetailsVisible","filterContent","setFilterContent","handleShowDetails","handleCloseDetails","SignIn","withRouter","pageType","setPageType","pathname","location","page","currentPage","Provider","Root","basename","process","exact","path","component","Todos","Notes","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,oC,+gBCE3C,IA0BeC,EA1BKC,YAAH,K,8DCAXC,EAAiB,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,OAGjBC,EAASC,cAAcV,GAGhB,IAAMW,EAAeX,EAAeG,YCdrCS,EAAe,CACnBC,MAAO,GACPC,WAAW,EACXC,OAAQ,KACRC,MAAO,MA+BHC,EAAsB,WAC1B,OAAO,SAAAC,GACLC,MAAM,GAAD,OAAIR,EAAJ,gBACFS,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAP,GACJ,IAAMU,EAAaV,EACfW,OAAOC,KAAKZ,GAAOa,KAAI,SAAAC,GACrB,OAAO,aACLC,GAAID,GACDd,EAAMc,OAGb,GACJT,EAfgB,SAAAL,GAAK,MAAK,CAAEgB,KAxBlB,YAwBmCC,QAASjB,GAe7CkB,CAASR,SA2BbS,EAAa,SAAAC,GACxB,OAAO,SAAAf,GACLC,MAAM,GAAD,OAAIR,EAAJ,gBAAgC,CACnCuB,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,KACpBb,MAAK,WACNF,EAASD,UAeFqB,EAAW,SAACC,EAAMC,GAC7B,OAAO,SAAAtB,GACLC,MAAM,GAAD,OAAIR,EAAJ,kBAA0B6B,EAA1B,SAA2C,CAC9CN,OAAQ,MACRC,KAAMC,KAAKC,UAAUE,KACpBnB,MAAK,WACNF,EAASD,UCxGTL,EAAe,CACnB6B,aAAa,EACbC,YAAa,IAgBFC,EAAkB,iBAAO,CAAEd,KAAM,iBChBxCjB,EAAe,CACnBgC,MAAO,GACP9B,WAAW,EACXC,OAAQ,KACRC,MAAO,MA8BH6B,EAA2B,WAC/B,OAAO,SAAA3B,GACLC,MAAM,GAAD,OAAIR,EAAJ,gBACFS,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAwB,GACJ,IAAME,EAAaF,EACfpB,OAAOC,KAAKmB,GACTlB,KAAI,SAAAC,GACH,OAAO,aACLC,GAAID,GACDiB,EAAMjB,OAGZoB,UACH,GACJ7B,EAjBgB,SAAA0B,GAAK,MAAK,CAAEf,KAxBlB,YAwBmCC,QAASc,GAiB7CI,CAASF,SC7CpBG,EAAaC,YAAgBC,KAE7BC,GADmBC,OAAOC,sCAAwCC,KACtCN,GAE5BO,EAAmBC,YAAgB,CAAEC,aHGf,WAAmC,IAAlCC,EAAiC,uDAAzB/C,EAAcgD,EAAW,uCAC5D,OAAQA,EAAO/B,MACb,IAJc,YAKZ,MAAO,CACLb,MAAO,KACPF,WAAW,EACXC,OAAQ,KACRF,MAAO+C,EAAO9B,SAGlB,IAbgB,cAcd,OAAO,2BACF6B,GADL,IAEE7C,WAAW,IAGf,QACE,OAAO6C,IGpB4CE,aFL7B,WAAmC,IAAlCF,EAAiC,uDAAzB/C,EAAcgD,EAAW,uCAC5D,OAAQA,EAAO/B,MACb,IAAK,eACH,MAAO,CACLY,aAAckB,EAAMlB,YACpBC,YAAY,GAAD,QAAK,IAAIoB,MAAOC,mBAG/B,QACE,OAAOJ,IEJ0DK,aDE3C,WAAmC,IAAlCL,EAAiC,uDAAzB/C,EAAcgD,EAAW,uCAC5D,OAAQA,EAAO/B,MACb,IAJc,YAKZ,MAAO,CACLb,MAAO,KACPF,WAAW,EACXC,OAAQ,KACR6B,MAAOgB,EAAO9B,SAGlB,IAbgB,cAcd,OAAO,2BACF6B,GADL,IAEE7C,WAAW,IAGf,QACE,OAAO6C,MChBEM,EADDC,YAAYV,EAAkBJ,G,OCR7Be,EAFKC,IAAMC,cAAc,SCWzBC,EAVK,SAAAC,GAClB,OAAO,SAA0BC,GAC/B,OACE,kBAAC,EAAYC,SAAb,MACG,SAAAC,GAAO,OAAI,kBAACH,EAAD,iBAAeC,EAAf,CAAsBG,YAAaD,U,glCCHhD,IAAME,EAAeC,YAAOC,IAAPD,CAAH,KAQT,qBAAGE,MAAkBC,OAAOC,SAGjC,qBAAGF,MAAkBC,OAAOE,WAKnC,qBAAGH,MAAkBI,MAAMC,SACb,qBAAGL,MAAkBC,OAAOC,SACjC,qBAAGF,MAAkBC,OAAOE,WACxB,qBAAGH,MAAkBM,SAASC,MAG3C,qBAAGP,MAAkBI,MAAMI,aAEd,qBAAGR,MAAkBM,SAASG,KAIX,qBAAGT,MAAkBC,OAAOE,WAC9C,qBAAGH,MAAkBC,OAAOE,WACjC,qBAAGH,MAAkBC,OAAOC,SAGrC,qBAAGQ,OAEHC,YADK,QAIL,qBAAGC,UAEHD,YADQ,KAMc,qBAAGX,MAAkBC,OAAOY,QAC5B,qBAAGb,MAAkBC,OAAOE,WAC9C,qBAAGH,MAAkBI,MAAMC,SACb,qBAAGL,MAAkBC,OAAOY,QACjC,qBAAGb,MAAkBC,OAAOE,WACxB,qBAAGH,MAAkBM,SAASC,SAYpCO,EANI,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIJ,EAAjB,EAAiBA,SAAjB,OACjB,kBAACf,EAAD,CAAce,SAAUA,EAAUI,GAAIA,GACnCD,I,87BCvDL,IAAME,EAAMnB,IAAOoB,IAAV,KASM,qBAAGC,MAAqB,MAAQ,WAClB,qBAAGnB,MAAkBC,OAAOE,WACzC,qBAAGH,MAAkBC,OAAOY,QAItCO,EAAoBtB,IAAOoB,IAAV,KAQjBG,EAAavB,YAAOC,IAAPD,CAAH,KAKU,qBAAGwB,QAIP,qBAAGtB,MAAkBC,OAAOE,WAE5B,qBAAGoB,OAAuB,QAAU,iBAItD,qBAAEvB,MAAgBI,MAAMI,aAiBbgB,EAXA,kBACb,kBAACP,EAAD,KACE,kBAACG,EAAD,KACE,kBAACK,EAAD,CAAYT,GAAG,SAAf,QACA,kBAACS,EAAD,CAAYT,GAAG,UAAf,SACA,kBAACS,EAAD,CAAYT,GAAG,UAAf,UAEF,kBAACK,EAAD,CAAYL,GAAG,UAAUM,KAAMI,QCxDtB1B,EAAQ,CACnBC,OCHoB,CACpBC,MAAO,UACPC,QAAS,UACTU,KAAM,UACNc,UAAW,UACXC,KAAM,QDDNC,KAAM,CACJC,KAAM,IACNC,QAAS,IACTC,KAAM,KAER1B,SAAU,CACR2B,IAAK,OACL1B,GAAI,SACJE,EAAG,SACHyB,EAAG,SACHC,EAAG,SACHC,GAAI,QAENhC,MAAO,CACLC,MAAO,2BACPgC,OAAQ,2BACR7B,UAAW,2D,ysBEbR,IAAM8B,GAAoBxC,IAAOyC,GAAV,MAGjB,qBAAGvC,MAAkBC,OAAOE,WAErC,qBAAGqC,UAEH7B,YADQ,SAIR,qBAAG8B,SAEH9B,YADO,SAME+B,GAAW5C,IAAOyC,GAAV,MAIR1C,GAAeC,IAAO6C,OAAV,MAMrB,qBAAG3C,MAAkBI,MAAMC,SA6ChBuC,GAvCE,SAAC,GAAkF,IAAhFC,EAA+E,EAA/EA,MAAOhG,EAAwE,EAAxEA,GAAI2F,EAAoE,EAApEA,SAAUM,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAa3E,OACE,wBAAItG,IAAKC,GACP,wBAAIsG,UAAU,gBAAgBJ,EAAQ,GACtC,kBAACT,GAAD,CAAmBa,UAAU,gBAAgBN,GAC7C,kBAACP,GAAD,CAAmBE,UAAQ,EAACW,UAAU,gBACnCX,GAEH,kBAACE,GAAD,CAAUS,UAAU,gBAClB,kBAAC,GAAD,CAAcC,QApBC,WACnBJ,EAAOnG,KAoBD,kBAAC,KAAD,CAAiByE,KAAM+B,QAEzB,kBAAC,GAAD,CAAcD,QAnBG,WACrBH,EAASpG,KAmBH,kBAAC,KAAD,CAAiByE,KAAMgC,QAEzB,kBAAC,GAAD,CAAcF,QAlBS,WAC3BF,EAAgBrG,EAAIgG,EAAOL,EAAUM,KAkB9BA,EACC,kBAAC,KAAD,CAAiBxB,KAAMiC,KAASC,MAAM,UAEtC,kBAAC,KAAD,CAAiBlC,KAAMmC,KAASD,MAAM,Y,gVC5D3C,IAAME,GAAc5D,IAAO6D,MAAV,MAiFlBC,GAAqB,CACzBrG,YAGasG,eAAQ,KAAMD,GAAdC,EArEG,SAAC,GAAwE,IAAtEhB,EAAqE,EAArEA,MAAOL,EAA8D,EAA9DA,SAAUM,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,MAAOlG,EAAkC,EAAlCA,GAAIiH,EAA8B,EAA9BA,OAAQZ,EAAsB,EAAtBA,gBAAsB,EAClDa,mBAAS,CAAElB,QAAOL,WAAUM,cADsB,mBACjFkB,EADiF,KACpEC,EADoE,KAGlFC,EAAe,WACnBJ,EAAOE,EAAanH,IAGhBsH,EAAc,SAAAC,GACJ,UAAVA,EAAExH,KACJsH,KAIEG,EAAoB,SAAAD,GACxBH,EAAe,2BAAKD,GAAN,kBAAoBI,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,UAU7D,OACE,wBAAI5H,IAAKC,GACP,wBAAIsG,UAAU,gBAAgBJ,EAAQ,GACtC,wBAAII,UAAU,gBACZ,kBAACO,GAAD,CACEa,KAAK,QACLC,MAAOR,EAAYnB,MACnB4B,SAAUJ,EACVK,UAAWP,KAIf,wBAAIhB,UAAU,gBACZ,kBAACO,GAAD,CACEa,KAAK,WACL/B,UAAQ,EACRgC,MAAOR,EAAYxB,SACnBiC,SAAUJ,EACVK,UAAWP,KAGf,kBAACzB,GAAD,CAAUS,UAAU,gBAClB,kBAAC,GAAD,CAAcC,QAASc,GACrB,kBAAC,KAAD,CAAiB5C,KAAMqD,QAGzB,kBAAC,GAAD,CAAcvB,QA7BG,WACrBwB,QAAQC,IAAI,UAAWhI,KA6BjB,kBAAC,KAAD,CAAiByE,KAAMgC,QAGzB,kBAAC,GAAD,CAAcF,QArCS,WAC3BF,EAAgBrG,EAAD,eAAUmH,MAqClBlB,EACC,kBAAC,KAAD,CAAiBxB,KAAMiC,KAASC,MAAM,UAEtC,kBAAC,KAAD,CAAiBlC,KAAMmC,KAASD,MAAM,c,2wCCzElD,IAAMsB,GAAchF,IAAOiF,MAAV,MAKJC,GAAmBlF,YAAO4D,GAAP5D,CAAH,MAGzB,qBAAGE,MAAkBI,MAAMC,SAG3B,qBAAGxC,OAEH8C,YADK,SAMIsE,GAAiBnF,IAAOoF,SAAV,MAevB,qBAAGlF,MAAkBI,MAAMC,SAG3B,qBAAGxC,OAEH8C,YADK,SAOHwE,GAAarF,IAAOsF,KAAV,MAQHC,GAAsBvF,IAAOoB,IAAV,MAO1BoE,GAAaxF,IAAOyF,GAAV,MACL,qBAAGvF,MAAkBC,OAAOE,WAGjCqF,G,6MACJ5G,MAAQ,CACNiE,MAAO,GACP4C,QAAS,GACTjD,SAAU,GACVM,WAAW,G,EAGb4C,kBAAoB,WAAO,IAAD,EACkD,EAAKjG,MAAvEkG,EADgB,EAChBA,WAAY1I,EADI,EACJA,WAAYW,EADR,EACQA,gBAAiBgC,EADzB,EACyBA,YAAa6C,EADtC,EACsCA,QADtC,EAEwB,EAAK7D,MAA7CiE,EAFgB,EAEhBA,MAAO4C,EAFS,EAETA,QAASjD,EAFA,EAEAA,SAAUM,EAFV,EAEUA,UAEd,UAAhBlD,GACF3C,EAAW,CAAE4F,QAAOL,WAAUM,cAEZ,UAAhBlD,GACF+F,EAAW,CAAE9C,QAAO4C,UAAShD,YAE/B7E,IACA,EAAKgI,SAAS,CACZ/C,MAAO,GACP4C,QAAS,GACTjD,SAAU,GACVC,QAAS,M,EAIboD,iBAAmB,SAAAzB,GAEjB,GADAA,EAAE0B,kBACG,EAAKlH,MAAMiE,MACd,OAAOkD,MAAM,kBAAD,OACmC,UAA3B,EAAKtG,MAAMG,YAA0B,OAAS,OADtD,cAId,EAAK8F,qB,EAGPvB,YAAc,SAAAC,GACE,UAAVA,EAAExH,KACJ,EAAKiJ,iBAAiBzB,I,EAI1B4B,eAAiB,SAAA5B,GACf,EAAKwB,SAAL,eACGxB,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAI9ByB,OAAS,WACP,EAAKxG,MAAM7B,mB,uDAGH,IACAgC,EAAgBkC,KAAKrC,MAArBG,YACR,OACE,kBAACuF,GAAD,KACE,kBAACL,GAAD,CAAaoB,QAAQ,SAArB,kBAC8B,UAAhBtG,EAA0B,OAAS,SAEjD,kBAACoF,GAAD,CACET,KAAK,QACL4B,YAA6B,UAAhBvG,EAA0B,WAAa,aACpD4E,MAAO1C,KAAKlD,MAAMiE,MAClB4B,SAAU3C,KAAKkE,eACftB,UAAW5C,KAAKqC,cAED,UAAhBvE,GACC,kBAACqF,GAAD,CACEV,KAAK,UACL4B,YAAY,eACZ3B,MAAO1C,KAAKlD,MAAM6G,QAClBhB,SAAU3C,KAAKkE,eACftB,UAAW5C,KAAKqC,cAGH,UAAhBvE,GACC,kBAACoF,GAAD,CAEET,KAAK,WACL4B,YAAY,eACZ3B,MAAO1C,KAAKlD,MAAM4D,SAClBiC,SAAU3C,KAAKkE,eACftB,UAAW5C,KAAKqC,cAGH,UAAhBvE,GAA2B,kBAAC0F,GAAD,KAAaxD,KAAKrC,MAAMgD,SACpD,kBAAC4C,GAAD,KACE,kBAACxF,EAAD,CAAca,MAAM,OAAO5D,KAAK,SAASsG,QAAStB,KAAK+D,kBACrD,kBAAC,KAAD,CAAiBvE,KAAM8E,QAEzB,kBAACvG,EAAD,CAAcuD,QAAStB,KAAKmE,QAC1B,kBAAC,KAAD,CAAiB3E,KAAM+E,KAAQ7C,MAAM,e,GA5F3BhE,aAwGhBoE,GAAqB,CACzB3G,aACAW,kBACA+H,WVvHwB,SAAAW,GACxB,OAAO,SAAAnK,GACLC,MAAM,GAAD,OAAIR,EAAJ,gBAAgC,CACnCuB,OAAQ,OACRC,KAAMC,KAAKC,UAAUgJ,KACpBjK,MAAK,WACNF,EAAS2B,WUmHAyB,KAAYsE,aATH,SAAAjF,GAAK,MAAK,CAChC6D,QAAS7D,EAAME,aAAanB,eAQsBiG,GAAzBC,CAA6C2B,K,4fCpLxE,IAAMe,GAAgBzG,IAAOoB,IAAV,MACG,qBAAGlB,MAAkBC,OAAOE,WAGrC,qBAAGqG,UAA6B,OAAS,UAQhC,qBAAGxG,MAAkBC,OAAOY,QAI9C,qBAAGb,MAAkBI,MAAMC,SAI3B,qBAAGL,MAAkBI,MAAMI,aAchBiG,GARD,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,UAAWE,EAAY,EAAZA,MAC1B,OACE,kBAACH,GAAD,CAAeC,UAAWA,GACxB,kBAAC,GAAD,CAASE,MAAOA,M,oTCrBtB,IAAMC,GAAsB7G,YAAOD,EAAPC,CAAH,MAOZ,qBAAG6C,OAAuB,OAAS,UAG1C4D,GAAgBzG,IAAOoB,IAAV,MACG,qBAAGlB,MAAkBC,OAAOY,QACjC,qBAAGnD,aAAiC,SAoC/CkG,GAAqB,CACzBhG,mBAEa2B,KAAYsE,aANH,SAAAjF,GAAK,MAAK,CAChClB,YAAakB,EAAME,aAAapB,eAKkBkG,GAAzBC,EApCR,SAAC,GAOb,IANL9C,EAMI,EANJA,SACA6F,EAKI,EALJA,WACAlJ,EAII,EAJJA,YACAE,EAGI,EAHJA,gBACA+E,EAEI,EAFJA,OAEI,EADJ/C,YAYA,OACE,kBAAC,IAAD,CAAeI,MAAOA,EAAOtC,YAAaA,GACxC,kBAACiJ,GAAD,CAAqBvD,QAZD,WACtBxF,KAWiD+E,OAAQA,GACrD,kBAAC,KAAD,CAAiBrB,KAAM8E,QAEzB,kBAAC,GAAD,CAAOM,MAXW,WACpB9I,IAEAgJ,KAQ+BJ,UAAW9I,IACxC,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAeA,YAAaA,GAAcqD,Q,8aClDzC,IAAM8F,GAAW/G,IAAOgH,GAAV,MACV,qBAAG9G,MAAkBC,OAAOC,SACtB,qBAAGF,MAAkB6B,KAAKG,QAIvC,qBAAGhC,MAAkBI,MAAMC,SACd,qBAAGL,MAAkBM,SAASG,KAIlCsG,GAAWjH,IAAOkH,GAAV,MACV,qBAAGhH,MAAkBC,OAAOC,SACtB,qBAAGF,MAAkB6B,KAAKG,Q,qqBCV3C,IAAM0B,GAAc5D,IAAO6D,MAAV,MAGK,qBAAG3D,MAAkBC,OAAOE,WAG5B,qBAAGH,MAAkBC,OAAOY,QAG9C,qBAAGb,MAAkBI,MAAMiC,UAOzB4E,GAAoBnH,YAAOD,GAAPC,CAAH,MAKjBoH,GAAuBpH,IAAOoB,IAAV,MAKtB,qBAAGlB,MAAkBI,MAAMiC,UAG3B,qBAAGrC,MAAkBI,MAAMI,aAyChBjB,MApCC,SAAC,GASV,IARL4H,EAQI,EARJA,cACAC,EAOI,EAPJA,iBACAC,EAMI,EANJA,gBACAC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,QACA7H,EACI,EADJA,YAEA,OACE,kBAACsH,GAAD,KACE,kBAAC,GAAD,CACEf,YAAY,wBACZ3B,MAAO8C,EACP7C,SAAU0C,IAEK,UAAhBvH,GACC,kBAAC,GAAD,CACEuG,YAAY,2BACZ3B,MAAOgD,EACP/C,SAAU2C,IAGG,UAAhBxH,GACC,kBAAC,GAAD,CACEuG,YAAY,0BACZ3B,MAAO+C,EACP9C,SAAU4C,IAGd,kBAACJ,GAAD,CAAmB7D,QAASqE,GAA5B,a,gVCvDN,IAAMC,GAAiB5H,IAAOoB,IAAV,MAOhB,qBAAGlB,MAAkBI,MAAMC,SAG3B,qBAAGL,MAAkBI,MAAMI,aAKzBmH,GAAc7H,YAAO8H,KAAP9H,CAAH,MACN,qBAAGE,MAAkBC,OAAOC,SA4HjC0D,GAAqB,CACzBiE,WjBtFwB,WACxB,OAAO,SAAA1L,GACLA,EAtC6B,CAAEW,KAxBf,gBA+DhBX,EAASD,OiBoFXe,aACA6K,ajBvG0B,SAACC,EAAalF,EAAOL,EAAUM,GACzD,OAAO,SAAA3G,GACLC,MAAM,GAAD,OAAIR,EAAJ,kBAA0BmM,EAA1B,SAA8C,CACjD5K,OAAQ,MACRC,KAAMC,KAAKC,UAAU,CACnBuF,QACAL,WACAM,WAAYA,MAEbzG,MAAK,WACNF,EAASD,UiB8Fb8L,WjBvEwB,SAAAC,GACxB,OAAO,SAAA9L,GACLC,MAAM,GAAD,OAAIR,EAAJ,kBAA0BqM,EAA1B,SAA4C,CAC/C9K,OAAQ,WACPd,MAAK,WACNF,EAASD,UiBmEbqB,YAGagC,KAAYsE,aAbH,SAAAjF,GAAK,MAAK,CAChC9C,MAAO8C,EAAMD,aAAa7C,MAC1BC,UAAW6C,EAAMD,aAAa5C,UAC9BE,MAAO2C,EAAMD,aAAa1C,SAUwB2H,GAAzBC,EAhIb,SAAC,GAA0E,IAAxE9H,EAAuE,EAAvEA,UAAW8L,EAA4D,EAA5DA,WAAY/L,EAAgD,EAAhDA,MAAOkM,EAAyC,EAAzCA,WAAYF,EAA6B,EAA7BA,aAAcvK,EAAe,EAAfA,SAAe,EACxDwG,mBAAS,IAD+C,mBAC/E/H,EAD+E,KACvEkM,EADuE,OAEhDnE,mBAAS,IAFuC,mBAE/EoE,EAF+E,KAElEC,EAFkE,OAG1CrE,mBAAS,IAHiC,mBAG/EsE,EAH+E,KAG/DC,EAH+D,KAKtFC,qBAAU,WACRV,MACC,IAEH,IAAM3D,EAAe,SAAC1G,EAAMC,GAC1BF,EAASC,EAAMC,GACfyK,EAAY,OAGRM,EAAa,SAAAC,GACjBP,EAAYO,IAed,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAY7B,WAAYiB,EAAYlF,OAAO,QACzC,kBAAC+E,GAAD,KACE,kBAACb,GAAD,mBACA,kBAAC,GAAD,CACEM,cAnBsB,SAAA/C,GAC9BgE,EAAehE,EAAEE,OAAOE,QAmBhB4C,iBAjByB,SAAAhD,GACjCkE,EAAkBlE,EAAEE,OAAOE,QAiBnB8C,UAAWa,EACXX,aAAca,EACdZ,QAhBU,WAClBW,EAAe,IACfE,EAAkB,OAgBZ,kBAACX,GAAD,CAAae,SAAO,EAACC,YAAU,GAC7B,+BACE,4BACE,iCACA,qCACA,wCACA,yCAGJ,+BACG5M,EACC,4BACE,wBAAI6M,QAAS,IACX,kBAACC,GAAA,EAAD,CAASC,UAAU,aAIvBhN,EACGiN,QAAO,SAAAC,GAAI,OAAIA,EAAKnG,MAAMoG,cAAcC,SAASf,EAAYc,kBAC7DF,QAAO,SAAAC,GAAI,OACVA,EAAKxG,SAASyG,cAAcC,SAASb,EAAeY,kBAarDtM,KAAI,SAACqM,EAAMjG,GAAP,OACH/G,IAAWgN,EAAKnM,GACd,kBAAC,GAAD,CACED,IAAKoM,EAAKnM,GACVA,GAAImM,EAAKnM,GACTkG,MAAOA,EACPF,MAAOmG,EAAKnG,MACZC,UAAWkG,EAAKlG,UAChBN,SAAUwG,EAAKxG,SACfsB,OAAQI,EACRjB,SAAU+E,EACV9E,gBAAiB4E,IAGnB,kBAAC,GAAD,CACElL,IAAKoM,EAAKnM,GACVA,GAAImM,EAAKnM,GACTkG,MAAOA,EACPF,MAAOmG,EAAKnG,MACZC,UAAWkG,EAAKlG,UAChBN,SAAUwG,EAAKxG,SACfQ,OAAQwF,EACRvF,SAAU+E,EACV9E,gBAAiB4E,WAQ/B/L,IAAcD,EAAMqN,QACpB,kBAACpC,GAAD,wDCjIKqC,GATQ,SAAC,GAAgB,IAAfrI,EAAc,EAAdA,SACvB,OACE,kBAAC,IAAD,CAAef,MAAOA,GACpB,kBAAC,EAAD,MACCe,I,gpBCFP,IAAMwF,GAAgBzG,IAAOoB,IAAV,MACM,qBAAElB,MAAkBC,OAAOE,WAY9B,qBAAEH,MAAkBC,OAAOY,QAE7C,qBAAGb,MAAkBI,MAAMC,SAG3B,qBAAGL,MAAkBI,MAAMI,aAKzB6E,GAAsBvF,IAAOoB,IAAV,MA2BVmI,GAlBF,WACX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,wBAAIC,MAAO,CAAC9F,MAAO,UAAnB,oCACA,kBAAC,GAAD,KACG,kBAAC/B,EAAD,CAAYb,SAAS,OAAOI,GAAG,UAA/B,SACA,kBAACS,EAAD,CAAYb,SAAS,OAAOI,GAAG,UAA/B,cChBEuI,GA1BE,SAAC,GAA0D,IAAxD1G,EAAuD,EAAvDA,MAAOE,EAAgD,EAAhDA,MAAOlG,EAAyC,EAAzCA,GAAI4F,EAAqC,EAArCA,QAAS+G,EAA4B,EAA5BA,YAAavG,EAAe,EAAfA,SAO1D,OACE,wBAAIrG,IAAKC,GACP,wBAAIsG,UAAU,gBAAgBJ,EAAQ,GACtC,kBAACT,GAAD,CAAmBa,UAAU,gBAAgBN,GAC7C,kBAACP,GAAD,CAAmBG,SAAO,EAACU,UAAU,gBAClCV,GAEH,wBAAIU,UAAU,gBACZ,kBAAC,GAAD,CAAcC,QAdK,WACvBoG,EAAY3M,KAcN,kBAAC,KAAD,CAAiByE,KAAMmI,QAEzB,kBAAC,GAAD,CAAcrG,QAdG,WACrBH,EAASpG,KAcH,kBAAC,KAAD,CAAiByE,KAAMgC,W,+1BChBjC,IAAMoG,GAAU5J,IAAOyC,GAAV,MACA,qBAAGiE,UAA6B,OAAS,UAOhC,qBAAGxG,MAAkBC,OAAOE,WAK5B,qBAAGH,MAAkBC,OAAOY,QAI9C,qBAAGb,MAAkBI,MAAMC,SAG3B,qBAAGL,MAAkBI,MAAMI,aAKzBmJ,GAAgB7J,IAAO8J,EAAV,MAGG,qBAAG5J,MAAkBC,OAAO0B,aAO5C2D,GAAaxF,IAAO8J,EAAV,MAmEVhG,GAAqB,CACzBiG,SnB5BsB,SAACC,EAAMrM,GAC7B,OAAO,SAAAtB,GACLC,MAAM,GAAD,OAAIR,EAAJ,kBAA0B6B,EAA1B,SAA2C,CAC9CN,OAAQ,MACRC,KAAMC,KAAKC,UAAL,eAAoBwM,MACzBzN,MAAK,WACNF,EAAS2B,WmByBA+F,eAAQ,KAAMD,GAAdC,EAjEK,SAAC,GAA6E,IAA3E2C,EAA0E,EAA1EA,UAAWf,EAA+D,EAA/DA,QAASsE,EAAsD,EAAtDA,QAASlH,EAA6C,EAA7CA,MAAOJ,EAAsC,EAAtCA,QAASQ,EAA6B,EAA7BA,SAAUpG,EAAmB,EAAnBA,GAAIgN,EAAe,EAAfA,SAAe,EAKnE9F,oBAAS,GAL0D,mBAKxFiG,EALwF,KAKhFC,EALgF,OAM3DlG,mBAAS,CAAE0B,UAAS5C,QAAOJ,YANgC,mBAMxFyH,EANwF,KAM5EC,EAN4E,KAYzF9F,EAAoB,SAAAD,GACxB+F,EAAc,2BAAKD,GAAN,kBAAmB9F,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,UAQ3D,OACE,wBAAI5H,IAAKC,GACP,kBAAC6M,GAAD,CAASlD,UAAWA,GACjBwD,EACC,oCACE,kBAAChF,GAAD,CACEnH,OAAK,EACL4G,SAAUJ,EACVG,MAAO0F,EAAWrH,MAClB0B,KAAK,UAEP,kBAACU,GAAD,CACEpH,OAAK,EACL4G,SAAUJ,EACVE,KAAK,UACLC,MAAO0F,EAAWzE,WAItB,oCACE,kBAACoB,GAAD,KAAWqD,EAAWrH,OACtB,kBAAC8G,GAAD,KAAgBO,EAAWzE,UAI/B,kBAAC,GAAD,iBAAsBhD,GACtB,kBAAC4C,GAAD,KACE,kBAACxF,EAAD,CAAcuD,QAAS2G,GAAvB,SACCC,EACC,kBAACnK,EAAD,CAAcuD,QAlCT,WACbyG,EAASK,EAAYrN,GACrBoN,GAAWD,KAgCH,QAEA,kBAACnK,EAAD,CAAcuD,QA5CL,WACjB6G,GAAWD,KA2CH,QAEF,kBAACnK,EAAD,CAAcuD,QArDC,WACrBH,EAASpG,KAoDH,gB,gVC1FV,IAAM8K,GAAc7H,YAAO8H,KAAP9H,CAAH,MACN,qBAAGE,MAAkBC,OAAOC,SAIjCkK,GAAkBtK,IAAOoB,IAAV,MAOjB,qBAAGlB,MAAkBI,MAAMC,SAG3B,qBAAGL,MAAkBI,MAAMI,aAiHzBoD,GAAqB,CACzByG,WpBvFwB,WACxB,OAAO,SAAAlO,GACLA,EAzB6B,CAAEW,KAxBf,gBAkDhBX,EAAS2B,OoBqFXwM,WpBtEwB,SAAArC,GACxB,OAAO,SAAA9L,GACLC,MAAM,GAAD,OAAIR,EAAJ,kBAA0BqM,EAA1B,SAA4C,CAC/C9K,OAAQ,WACPd,MAAK,WACNF,EAAS2B,WoBoEAyB,KAAYsE,aAVH,SAAAjF,GAAK,MAAK,CAChCf,MAAOe,EAAMK,aAAapB,MAC1B9B,UAAW6C,EAAMK,aAAalD,UAC9BE,MAAO2C,EAAMK,aAAahD,SAOwB2H,GAAzBC,EAjHb,SAAC,GAAkD,IAAhDwG,EAA+C,EAA/CA,WAAYxM,EAAmC,EAAnCA,MAAO9B,EAA4B,EAA5BA,UAAWuO,EAAiB,EAAjBA,WAC7C/B,qBAAU,WACR8B,MAEC,IAJ2D,MAMlCtG,mBAAS,IANyB,mBAMvDwG,EANuD,KAM/CC,EAN+C,OAOlBzG,oBAAS,GAPS,mBAOvD0G,EAPuD,KAOvCC,EAPuC,OAQxB3G,mBAAS,IARe,mBAQvDoE,EARuD,KAQ1CC,EAR0C,OASpBrE,mBAAS,IATW,mBASvD4G,EATuD,KASxCC,EATwC,KAWxDC,EAAoB,SAAAhO,GACxB6N,GAAmBD,GACnBD,EAAU3N,IAGNiO,EAAqB,WACzBJ,GAAmBD,GACnBD,EAAU,KAeZ,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,GAAD,CAAY5D,WAAYyD,EAAY1H,OAAO,QACzC,kBAACyH,GAAD,KACE,kBAACvD,GAAD,yBADF,IAEE,kBAAC,GAAD,CACEM,cAnBsB,SAAA/C,GAC9BgE,EAAehE,EAAEE,OAAOE,QAmBhB6C,gBAjBwB,SAAAjD,GAChCwG,EAAiBxG,EAAEE,OAAOE,QAiBlB8C,UAAWa,EACXZ,YAAaoD,EACblD,QAhBU,WAClBW,EAAe,IACfwC,EAAiB,OAgBX,kBAAC,GAAD,CAAalC,SAAO,EAACC,YAAU,GAC7B,+BACE,wBAAI/L,IAAK,GACP,iCACA,qCACA,uCACA,yCAGJ,+BACGb,EACC,4BACE,wBAAI6M,QAAS,IACX,kBAACC,GAAA,EAAD,CAASC,UAAU,aAIvBjL,EACGkL,QAAO,SAAAe,GAAI,OAAIA,EAAKjH,MAAMoG,cAAcC,SAASf,EAAYc,kBAC7DF,QAAO,SAAAe,GAAI,OAAIA,EAAKrE,QAAQwD,cAAcC,SAASyB,EAAc1B,kBACjEtM,KAAI,SAACmN,EAAM/G,GAAP,OACH,oCACE,kBAAC,GAAD,CACEnG,IAAKkN,EAAKjN,GACVgG,MAAOiH,EAAKjH,MACZJ,QAASqH,EAAKrH,QACd5F,GAAIiN,EAAKjN,GACTkG,MAAOA,EACPyG,YAAaqB,EACb5H,SAAUqH,IAEXC,IAAWT,EAAKjN,IACf,kBAAC,GAAD,CACED,IAAKkN,EAAKrH,QACV+D,UAAWiE,EACXV,QAASe,EACTrF,QAASqE,EAAKrE,QACd5I,GAAIiN,EAAKjN,GACTgG,MAAOiH,EAAKjH,MACZJ,QAASqH,EAAKrH,QACdQ,SAAUqH,YAS1BvO,IAAc8B,EAAMsL,QACpB,kBAACpC,GAAD,0DC9HKgE,GAFA,kBAAM,wBAAIzB,MAAO,CAAC9F,MAAO,UAAnB,oB,SCqBNwH,gBAnBO,SAAC,GAA4B,IAA1BjK,EAAyB,EAAzBA,SAAatB,EAAY,+BAChBsE,mBAAS,SADO,mBACzCkH,EADyC,KAC/BC,EAD+B,KAIlCC,EACV1L,EADF2L,SAAYD,SAYd,OATA5C,qBAAU,WACR,IADc,EACI,CAAC,QAAS,QAAS,QAELQ,QAAO,SAAAsC,GAAI,OAAIF,EAASjC,SAASmC,MAA1DC,EAHO,oBAKd1G,QAAQC,IAAI,cAAeyG,GAC3BJ,EAAYI,KACX,CAACH,IAEG,kBAAC,EAAYI,SAAb,CAAsB/G,MAAOyG,GAAWlK,MCalCyK,GArBF,WACX,OACE,kBAAC,IAAD,CAAUtM,MAAOA,GACf,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAeuM,SAAUC,oBACvB,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IAE/B,kBAAC,IAAD,CAAU/J,GAAG,WAEf,kBAAC,IAAD,CAAO4K,KAAK,SAASC,UAAWC,KAChC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,KAChC,kBAAC,IAAD,CAAOH,KAAK,QAAQC,UAAWxC,UCbvB2C,QACW,cAA7B1N,OAAO8M,SAASa,UAEe,UAA7B3N,OAAO8M,SAASa,UAEhB3N,OAAO8M,SAASa,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrQ,MAAK,SAAAsQ,GACJA,EAAaC,gBAEdC,OAAM,SAAA5Q,GACL2I,QAAQ3I,MAAMA,EAAM6Q,c","file":"static/js/main.b68b1960.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.4a3642db.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n*, *::before, *::after{\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml{\r\n  font-size: 62.5%;\r\n\r\n}\r\n\r\n\r\nbody{\r\n  font-size: 1.6rem;\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: 'Nunito', sans-serif;\r\n  background-color: #0f1c21;\r\n  /* background-color: pink; */\r\n\r\n  \r\n th, td {\r\n   text-align: center;\r\n }}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import firebase from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\r\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\r\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\r\n  projectId: 'notes-and-todos-6756c',\r\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\r\n  messagingSenderId: '432462096709',\r\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\r\n  measurementId: 'G-LL8BYZF9S7',\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\n\r\nexport const DATABASE_URL = firebaseConfig.databaseURL;\r\n","import { DATABASE_URL } from 'utils/database';\r\n\r\nconst initialState = {\r\n  todos: [],\r\n  isLoading: false,\r\n  editID: null,\r\n  error: null,\r\n};\r\n\r\n//actions\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_TODOS = 'SET_TODOS';\r\n\r\nexport const todosReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TODOS:\r\n      return {\r\n        error: null,\r\n        isLoading: false,\r\n        editID: null,\r\n        todos: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setTodos = todos => ({ type: SET_TODOS, payload: todos });\r\n\r\nconst fetchWithoutLoading = () => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos.json`)\r\n      .then(r => r.json())\r\n      .then(todos => {\r\n        const arrayTodos = todos\r\n          ? Object.keys(todos).map(key => {\r\n              return {\r\n                id: key,\r\n                ...todos[key],\r\n              };\r\n            })\r\n          : [];\r\n        dispatch(setTodos(arrayTodos));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setCompleted = (completedId, title, deadline, completed) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${completedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        title,\r\n        deadline,\r\n        completed: !completed,\r\n      }),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchTodos = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    dispatch(fetchWithoutLoading());\r\n  };\r\n};\r\n\r\nexport const addNewTask = taskData => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(taskData),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTask = deletedId => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const editTask = (task, editedId) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/todos/${editedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(task),\r\n    }).then(() => {\r\n      dispatch(fetchWithoutLoading());\r\n    });\r\n  };\r\n};\r\n","const initialState = {\r\n  isModalOpen: false,\r\n  createdDate: '',\r\n};\r\n\r\nexport const modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_MODAL':\r\n      return {\r\n        isModalOpen: !state.isModalOpen,\r\n        createdDate: `${new Date().toLocaleString()}`,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const toggleModalOpen = () => ({ type: 'TOGGLE_MODAL' });\r\n","import { DATABASE_URL } from 'utils/database';\r\n\r\nconst initialState = {\r\n  notes: [],\r\n  isLoading: false,\r\n  editID: null,\r\n  error: null,\r\n};\r\n\r\nconst SET_LOADING = 'SET_LOADING';\r\nconst SET_NOTES = 'SET_NOTES';\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_NOTES:\r\n      return {\r\n        error: null,\r\n        isLoading: false,\r\n        editID: null,\r\n        notes: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLoading = () => ({ type: SET_LOADING });\r\nexport const setNotes = notes => ({ type: SET_NOTES, payload: notes });\r\n\r\nconst fetchNotesWithoutLoading = () => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes.json`)\r\n      .then(r => r.json())\r\n      .then(notes => {\r\n        const arrayNotes = notes\r\n          ? Object.keys(notes)\r\n              .map(key => {\r\n                return {\r\n                  id: key,\r\n                  ...notes[key],\r\n                };\r\n              })\r\n              .reverse()\r\n          : [];\r\n        dispatch(setNotes(arrayNotes));\r\n      });\r\n  };\r\n};\r\n\r\nexport const fetchNotes = () => {\r\n  return dispatch => {\r\n    dispatch(setLoading());\r\n    dispatch(fetchNotesWithoutLoading());\r\n  };\r\n};\r\n\r\nexport const addNewNote = noteData => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes/.json`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(noteData),\r\n    }).then(() => {\r\n      dispatch(fetchNotesWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteNote = deletedId => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes/${deletedId}.json`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      dispatch(fetchNotesWithoutLoading());\r\n    });\r\n  };\r\n};\r\n\r\nexport const editNote = (note, editedId) => {\r\n  return dispatch => {\r\n    fetch(`${DATABASE_URL}/notes/${editedId}.json`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify({ ...note }),\r\n    }).then(() => {\r\n      dispatch(fetchNotesWithoutLoading());\r\n    });\r\n  };\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { todosReducer } from 'reducers/todosReducer';\r\nimport { modalReducer } from 'reducers/modalReducer';\r\nimport {notesReducer} from 'reducers/notesReducer';\r\n\r\nconst middleware = applyMiddleware(thunk);\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst enhancer = composeEnhancers(middleware);\r\n\r\nconst combinedReducers = combineReducers({ todosReducer, modalReducer, notesReducer });\r\n\r\nconst store = createStore(combinedReducers, enhancer);\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst PageContext = React.createContext('todos');\r\n\r\nexport default PageContext;\r\n","import React from 'react';\r\nimport PageContext from 'components/context/context';\r\n\r\nconst withContext = Component => {\r\n  return function contextComponent(props) {\r\n    return (\r\n      <PageContext.Consumer>\r\n        {context => <Component {...props} pageContext={context} />}\r\n      </PageContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withContext;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const StyledButton = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  width: 20%;\r\n  padding: 1rem;\r\n  height: 50px;\r\n  background: ${({ theme }) => theme.colors.white};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  transition: box-shadow 0.3s ease;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    background: ${({ theme }) => theme.colors.white};\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    font-size: ${({ theme }) => theme.fontSize.xs};\r\n    width: 50px;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 30px;\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n  }\r\n\r\n  :hover {\r\n    box-shadow: 0 10px 20px -15px ${({ theme }) => theme.colors.primary};\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color: ${({ theme }) => theme.colors.white};\r\n    text-decoration: none;\r\n  }\r\n  ${({ modal }) =>\r\n    modal &&\r\n    css`\r\n      width: 40%;\r\n    `}\r\n  ${({ homePage }) =>\r\n    homePage &&\r\n    css`\r\n      height: 100px;\r\n      box-shadow: -5px 3px 15px rgba(62, 194, 233, 0.3);\r\n      width: 40%;\r\n\r\n      background-color: ${({ theme }) => theme.colors.dark};\r\n      border: 3px solid ${({ theme }) => theme.colors.primary};\r\n      ${({ theme }) => theme.media.phone} {\r\n        background: ${({ theme }) => theme.colors.dark};\r\n        color: ${({ theme }) => theme.colors.primary};\r\n        font-size: ${({ theme }) => theme.fontSize.xs};\r\n        width: 40%;\r\n      }\r\n    `}\r\n`;\r\n\r\nconst ButtonLink = ({ children, to, homePage }) => (\r\n  <StyledButton homePage={homePage} to={to}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n\r\nexport default ButtonLink;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport ButtonLink from 'components/Button/Button';\r\nimport styled from 'styled-components';\r\nimport logoutIcon from 'assets/icons/logout.svg';\r\n\r\n\r\nconst Bar = styled.div`\r\n  width: 100%;\r\n  height: 12vh;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  background: ${({ theme }) => theme.colors.dark};\r\n  z-index: 2;\r\n`;\r\n\r\nconst StyledButtonPlace = styled.div`\r\n  width: 50%;\r\n  height: inherit;\r\n  display: inline-flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst ButtonIcon = styled(Link)`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 20px;\r\n  margin-right: 1%;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  background-size: 50% 50%;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  color: white;\r\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\r\n  &.active {\r\n    background-color: white;\r\n  }\r\n  ${({theme})=> theme.media.landscape}{\r\n  width: 30px;\r\n  height: 30px;\r\n  }\r\n`;\r\n\r\nconst NavBar = () => (\r\n  <Bar>\r\n    <StyledButtonPlace>\r\n      <ButtonLink to=\"/home\">home</ButtonLink>\r\n      <ButtonLink to=\"/todos\">todos</ButtonLink>\r\n      <ButtonLink to=\"/notes\">notes</ButtonLink>\r\n    </StyledButtonPlace>\r\n    <ButtonIcon to=\"/signin\" icon={logoutIcon} />\r\n  </Bar>\r\n);\r\n\r\nexport default NavBar;\r\n","import { colors } from './colors';\r\n\r\nexport const theme = {\r\n  colors,\r\n  font: {\r\n    this: 300,\r\n    regular: 400,\r\n    bold: 600,\r\n  },\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n  media: {\r\n    phone: '@media(max-width: 520px)',\r\n    tablet: '@media(max-width: 768px)',\r\n    landscape: '@media(max-width: 736px) and (orientation: landscape) ',\r\n  },\r\n};\r\n","export const colors = {\r\n  white: '#ffffff',\r\n  primary: '#3ec2e9',\r\n  dark: '#0f1c21',\r\n  lightDark: '#142a33',\r\n  blur: 'grey',\r\n  // hover: '#'\r\n};\r\n","// TodoItem.js\r\nimport React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const StyledTdWithHover = styled.td`\r\n  width: 50%;\r\n  :hover {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n  ${({ deadline }) =>\r\n    deadline &&\r\n    css`\r\n      width: 10vw;\r\n    `}\r\n  ${({ created }) =>\r\n    created &&\r\n    css`\r\n      width: 15vw;\r\n    `}\r\n`;\r\n\r\nexport const StyledTd = styled.td`\r\n  width: fit-content;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  color: black;\r\n  background: white;\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 10px;\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 30px;\r\n    width: 30px;\r\n  }\r\n`;\r\n\r\nconst TodoItem = ({ title, id, deadline, completed, index, onEdit, onDelete, onCompleteCheck }) => {\r\n  const handleOnEdit = () => {\r\n    onEdit(id);\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const handleCompletedCheck = () => {\r\n    onCompleteCheck(id, title, deadline, completed);\r\n  };\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle\">{title}</StyledTdWithHover>\r\n      <StyledTdWithHover deadline className=\"align-middle\">\r\n        {deadline}\r\n      </StyledTdWithHover>\r\n      <StyledTd className=\"align-middle\">\r\n        <StyledButton onClick={handleOnEdit}>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleCompletedCheck}>\r\n          {completed ? (\r\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n          )}\r\n        </StyledButton>\r\n      </StyledTd>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport { editTask } from 'reducers/todosReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSave, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport { StyledTd } from 'components/Todo/TodoItem';\r\n\r\nexport const StyledInput = styled.input`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 100%;\r\n  padding: 0.5rem 0.5rem;\r\n  float: left;\r\n  text-align: center;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst TodoInput = ({ title, deadline, completed, index, id, onSave, onCompleteCheck }) => {\r\n  const [editedInput, setEditedInput] = useState({ title, deadline, completed });\r\n\r\n  const handleOnSave = () => {\r\n    onSave(editedInput, id);\r\n  };\r\n\r\n  const onEnterSave = e => {\r\n    if (e.key === 'Enter') {\r\n      handleOnSave();\r\n    }\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setEditedInput({ ...editedInput, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleCompletedCheck = () => {\r\n    onCompleteCheck(id, { ...editedInput });\r\n  };\r\n\r\n  const handleOnDelete = () => {\r\n    console.log('deleted', id);\r\n  };\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <td className=\"align-middle\">\r\n        <StyledInput\r\n          name=\"title\"\r\n          value={editedInput.title}\r\n          onChange={handleInputChange}\r\n          onKeyDown={onEnterSave}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"align-middle\">\r\n        <StyledInput\r\n          name=\"deadline\"\r\n          deadline\r\n          value={editedInput.deadline}\r\n          onChange={handleInputChange}\r\n          onKeyDown={onEnterSave}\r\n        />\r\n      </td>\r\n      <StyledTd className=\"align-middle\">\r\n        <StyledButton onClick={handleOnSave}>\r\n          <FontAwesomeIcon icon={faSave} />\r\n        </StyledButton>\r\n\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </StyledButton>\r\n\r\n        <StyledButton onClick={handleCompletedCheck}>\r\n          {completed ? (\r\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\r\n          ) : (\r\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n          )}\r\n        </StyledButton>\r\n      </StyledTd>\r\n    </tr>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  editTask,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoInput);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { StyledInput } from 'components/Todo/TodoInput';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport { addNewTask } from 'reducers/todosReducer';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { addNewNote } from 'reducers/notesReducer';\r\nimport withContext from 'components/context/withContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faUndo } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledLabel = styled.label`\r\n  color: white;\r\n  display: block;\r\n`;\r\n\r\nexport const StyledModalInput = styled(StyledInput)`\r\n  width: 70%;\r\n  margin: 1rem auto;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 100%;\r\n  }\r\n  ${({ notes }) =>\r\n    notes &&\r\n    css`\r\n      width: 90%;\r\n    `}\r\n`;\r\n\r\nexport const StyledTextarea = styled.textarea`\r\n  background-color: lightgray;\r\n  border: none;\r\n  border-radius: 20px;\r\n  width: 70%;\r\n  height: 50%;\r\n  margin: 1rem auto;\r\n  float: left;\r\n  text-align: center;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    font-size: 1.2rem;\r\n  }\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 100%;\r\n  }\r\n  ${({ notes }) =>\r\n    notes &&\r\n    css`\r\n      width: 90%;\r\n      height: 70%;\r\n    `}\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 90%;\r\n  margin-top: auto;\r\n`;\r\n\r\nconst StyledDate = styled.h3`\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`;\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    title: '',\r\n    content: '',\r\n    deadline: '',\r\n    completed: false,\r\n  };\r\n\r\n  putDataInDatabase = () => {\r\n    const { addNewNote, addNewTask, toggleModalOpen, pageContext, created } = this.props;\r\n    const { title, content, deadline, completed } = this.state;\r\n\r\n    if (pageContext === 'todos') {\r\n      addNewTask({ title, deadline, completed });\r\n    }\r\n    if (pageContext === 'notes') {\r\n      addNewNote({ title, content, created });\r\n    }\r\n    toggleModalOpen();\r\n    this.setState({\r\n      title: '',\r\n      content: '',\r\n      deadline: '',\r\n      created: '',\r\n    });\r\n  };\r\n\r\n  handleOnAddClick = e => {\r\n    e.preventDefault();\r\n    if (!this.state.title) {\r\n      return alert(\r\n        `Please add new ${this.props.pageContext === 'todos' ? 'task' : 'note'} or quit!`,\r\n      );\r\n    }\r\n    this.putDataInDatabase();\r\n  };\r\n\r\n  onEnterSave = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleOnAddClick(e);\r\n    }\r\n  };\r\n\r\n  handleOnChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onQuit = () => {\r\n    this.props.toggleModalOpen();\r\n  };\r\n\r\n  render() {\r\n    const { pageContext } = this.props;\r\n    return (\r\n      <StyledForm>\r\n        <StyledLabel htmlFor=\"title\">\r\n          {`Add new ${pageContext === 'todos' ? 'task' : 'note'}`}\r\n        </StyledLabel>\r\n        <StyledModalInput\r\n          name=\"title\"\r\n          placeholder={pageContext === 'todos' ? 'new task' : 'note title'}\r\n          value={this.state.title}\r\n          onChange={this.handleOnChange}\r\n          onKeyDown={this.onEnterSave}\r\n        ></StyledModalInput>\r\n        {pageContext === 'notes' && (\r\n          <StyledTextarea\r\n            name=\"content\"\r\n            placeholder=\"note content\"\r\n            value={this.state.content}\r\n            onChange={this.handleOnChange}\r\n            onKeyDown={this.onEnterSave}\r\n          ></StyledTextarea>\r\n        )}\r\n        {pageContext === 'todos' && (\r\n          <StyledModalInput\r\n            // deadline\r\n            name=\"deadline\"\r\n            placeholder=\"new deadline\"\r\n            value={this.state.deadline}\r\n            onChange={this.handleOnChange}\r\n            onKeyDown={this.onEnterSave}\r\n          ></StyledModalInput>\r\n        )}\r\n        {pageContext === 'notes' && <StyledDate>{this.props.created}</StyledDate>}\r\n        <StyledButtonWrapper>\r\n          <StyledButton modal=\"true\" type=\"submit\" onClick={this.handleOnAddClick}>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n          </StyledButton>\r\n          <StyledButton onClick={this.onQuit}>\r\n            <FontAwesomeIcon icon={faUndo} color=\"red\" />\r\n          </StyledButton>\r\n        </StyledButtonWrapper>\r\n      </StyledForm>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  created: state.modalReducer.createdDate,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addNewTask,\r\n  toggleModalOpen,\r\n  addNewNote,\r\n};\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(AddTask));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport AddTask from 'components/Form/Form';\r\n\r\nconst StyledWrapper = styled.div`\r\n  border: 5px solid ${({ theme }) => theme.colors.primary};\r\n  z-index: 1;\r\n  position: fixed;\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n  padding: 2rem;\r\n  flex-direction: column;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: 50%;\r\n  width: 50%;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    height: 60%;\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    height: 60%;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ isVisible, onAdd }) => {\r\n  return (\r\n    <StyledWrapper isVisible={isVisible}>\r\n      <AddTask onAdd={onAdd}></AddTask>\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport withContext from 'components/context/withContext';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport Modal from 'components/Modal/Modal';\r\nimport { toggleModalOpen } from 'reducers/modalReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledAddItemButton = styled(StyledButton)`\r\n  position: fixed;\r\n  top: 85vh;\r\n  left: 85vw;\r\n  width: 50px;\r\n  height: 50px;\r\n  z-index: 2;\r\n  display: ${({ button }) => (button ? 'flex' : 'none')};\r\n`;\r\n\r\nconst StyledWrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  filter: blur(${({ isModalOpen }) => isModalOpen && '5px'});\r\n`;\r\n\r\nconst MainLayout = ({\r\n  children,\r\n  onAddFetch,\r\n  isModalOpen,\r\n  toggleModalOpen,\r\n  button,\r\n  pageContext,\r\n}) => {\r\n  const handleIsVisible = () => {\r\n    toggleModalOpen();\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    toggleModalOpen();\r\n    // setCreationDate();\r\n    onAddFetch();\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme} isModalOpen={isModalOpen}>\r\n      <StyledAddItemButton onClick={handleIsVisible} button={button}>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </StyledAddItemButton>\r\n      <Modal onAdd={handleAddTask} isVisible={isModalOpen} />\r\n      <NavBar />\r\n      <StyledWrapper isModalOpen={isModalOpen}>{children}</StyledWrapper>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isModalOpen: state.modalReducer.isModalOpen,\r\n});\r\nconst mapDispatchToProps = {\r\n  toggleModalOpen,\r\n};\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(MainLayout));\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledH1 = styled.h1`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 1rem;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    font-size: ${({ theme }) => theme.fontSize.s};\r\n  }\r\n`;\r\n\r\nexport const StyledH2 = styled.h2`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  font-weight: ${({ theme }) => theme.font.bold};\r\n  text-align: center;\r\n  padding: 3rem;\r\n  margin-bottom: 4rem;\r\n  position: relative;\r\n  top: 13vh;\r\n  /* background-color: red; */\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\nimport withContext from 'components/context/withContext';\r\n\r\nconst StyledInput = styled.input`\r\n  width: 40%;\r\n  height: 40px;\r\n  border: 2px solid ${({ theme }) => theme.colors.primary};\r\n  border-radius: 5px;\r\n  color: white;\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  margin-bottom: 0.5rem;\r\n  margin-right: 0.5rem;\r\n  ${({ theme }) => theme.media.tablet} {\r\n    ::placeholder {\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButtonClear = styled(StyledButton)`\r\n  width: 20%;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst StyledFiltersWrapper = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  ${({ theme }) => theme.media.tablet} {\r\n    width: 100%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Filters = ({\r\n  onTitleFilter,\r\n  onDeadlineFilter,\r\n  onContentFilter,\r\n  titleText,\r\n  contentText,\r\n  deadlineText,\r\n  onClear,\r\n  pageContext,\r\n}) => {\r\n  return (\r\n    <StyledFiltersWrapper>\r\n      <StyledInput\r\n        placeholder=\"🔎 by title\"\r\n        value={titleText}\r\n        onChange={onTitleFilter}\r\n      ></StyledInput>\r\n      {pageContext === 'todos' && (\r\n        <StyledInput\r\n          placeholder=\"🔎 by deadline\"\r\n          value={deadlineText}\r\n          onChange={onDeadlineFilter}\r\n        ></StyledInput>\r\n      )}\r\n      {pageContext === 'notes' && (\r\n        <StyledInput\r\n          placeholder=\"🔎 by content\"\r\n          value={contentText}\r\n          onChange={onContentFilter}\r\n        ></StyledInput>\r\n      )}\r\n      <StyledButtonClear onClick={onClear}>Clear</StyledButtonClear>\r\n    </StyledFiltersWrapper>\r\n  );\r\n};\r\n\r\nexport default withContext(Filters);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport { StyledH1, StyledH2 } from 'components/H1/H1';\r\nimport TodoItem from 'components/Todo/TodoItem';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport TodoInput from 'components/Todo/TodoInput';\r\nimport withContext from 'components/context/withContext';\r\nimport Filters from 'components/filters/Filters';\r\n\r\nimport { fetchTodos, addNewTask, setCompleted, deleteTask, editTask } from 'reducers/todosReducer';\r\n\r\nconst StyledTodoList = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 13vh;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 95%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  table-layout: auto;\r\n`;\r\n\r\nconst Todos = ({ isLoading, fetchTodos, todos, deleteTask, setCompleted, editTask }) => {\r\n  const [editID, setEditedID] = useState('');\r\n  const [filterTitle, setFilterTitle] = useState('');\r\n  const [filterDeadline, setFilterDeadline] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleOnSave = (task, editedId) => {\r\n    editTask(task, editedId);\r\n    setEditedID(null);\r\n  };\r\n\r\n  const handleEdit = editedID => {\r\n    setEditedID(editedID);\r\n  };\r\n\r\n  const handleFilterTitleChange = e => {\r\n    setFilterTitle(e.target.value);\r\n  };\r\n  const handleFilterDeadlineChange = e => {\r\n    setFilterDeadline(e.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterTitle('');\r\n    setFilterDeadline('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainLayout onAddFetch={fetchTodos} button=\"true\">\r\n        <StyledTodoList>\r\n          <StyledH1>Todos List</StyledH1>\r\n          <Filters\r\n            onTitleFilter={handleFilterTitleChange}\r\n            onDeadlineFilter={handleFilterDeadlineChange}\r\n            titleText={filterTitle}\r\n            deadlineText={filterDeadline}\r\n            onClear={clearFilter}\r\n          />\r\n          <StyledTable striped responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>To Do</th>\r\n                <th>Deadline</th>\r\n                <th>Edition</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={12}>\r\n                    <Spinner animation=\"border\" />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                todos\r\n                  .filter(todo => todo.title.toLowerCase().includes(filterTitle.toLowerCase()))\r\n                  .filter(todo =>\r\n                    todo.deadline.toLowerCase().includes(filterDeadline.toLowerCase()),\r\n                  )\r\n\r\n                  //   if (this.state.showCompleted && this.state.showInCompleted) {\r\n                  //     return textFilter;\r\n                  //   } else if (this.state.showCompleted) {\r\n                  //     return textFilter && todo.completed === true;\r\n                  //   } else if (this.state.showInCompleted) {\r\n                  //     return textFilter && todo.completed === false;\r\n                  //   } else {\r\n                  //     return false;\r\n                  //   }\r\n                  // })\r\n                  .map((todo, index) =>\r\n                    editID === todo.id ? (\r\n                      <TodoInput\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        title={todo.title}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onSave={handleOnSave}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ) : (\r\n                      <TodoItem\r\n                        key={todo.id}\r\n                        id={todo.id}\r\n                        index={index}\r\n                        title={todo.title}\r\n                        completed={todo.completed}\r\n                        deadline={todo.deadline}\r\n                        onEdit={handleEdit}\r\n                        onDelete={deleteTask}\r\n                        onCompleteCheck={setCompleted}\r\n                      />\r\n                    ),\r\n                  )\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledTodoList>\r\n        {!isLoading && !todos.length && (\r\n          <StyledH2>Your todo list is empty! Enter new task! </StyledH2>\r\n        )}\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todosReducer.todos,\r\n  isLoading: state.todosReducer.isLoading,\r\n  error: state.todosReducer.error,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchTodos,\r\n  addNewTask,\r\n  setCompleted,\r\n  deleteTask,\r\n  editTask,\r\n};\r\n\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(Todos));\r\n","import React from 'react';\r\nimport  { ThemeProvider } from 'styled-components';\r\nimport NavBar from 'components/NavBar/NavBar.js';\r\nimport { theme } from '../utils/theme';\r\n\r\nconst HomePageLayout = ({children}) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <NavBar />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default HomePageLayout;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport HomePageLayout from 'Layout/HomePageLayout';\r\nimport styled from 'styled-components';\r\nimport GlobalStyles from 'Theme/GlobalStyle';\r\nimport ButtonLink from 'components/Button/Button';\r\n\r\nconst StyledWrapper = styled.div`\r\n  /* border: 3px solid ${({theme})  => theme.colors.primary}; */\r\n   position: absolute;\r\n   top: 50%;\r\n   left: 50%;\r\n   height: 50%;\r\n   width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  padding: 2rem;\r\n  transform: translate(-50%, -50%);\r\n  background-color: ${({theme})  => theme.colors.dark};\r\n  transition: transform 0.25s ease-in-out;\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n display: flex;\r\n justify-content: space-evenly;\r\n align-items: center;\r\n width: 90%;\r\n height: 50%;\r\n`;\r\n\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <HomePageLayout>\r\n        <StyledWrapper>\r\n          <h1 style={{color: 'white'}}>In this app you can store your: </h1>\r\n          <StyledButtonWrapper>\r\n             <ButtonLink homePage='true' to='/todos'>todos</ButtonLink>\r\n             <ButtonLink homePage='true' to='/notes'>notes</ButtonLink>\r\n             </StyledButtonWrapper>\r\n        </StyledWrapper>\r\n       </HomePageLayout>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faEye } from '@fortawesome/free-regular-svg-icons';\r\nimport { StyledTdWithHover } from 'components/Todo/TodoItem';\r\nimport { StyledButton } from 'components/Todo/TodoItem';\r\n\r\nconst NoteItem = ({ title, index, id, created, showDetails, onDelete }) => {\r\n  const handleToggleShow = () => {\r\n    showDetails(id);\r\n  };\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"align-middle\">{index + 1}</td>\r\n      <StyledTdWithHover className=\"align-middle\">{title}</StyledTdWithHover>\r\n      <StyledTdWithHover created className=\"align-middle\">\r\n        {created}\r\n      </StyledTdWithHover>\r\n      <td className=\"align-middle\">\r\n        <StyledButton onClick={handleToggleShow}>\r\n          <FontAwesomeIcon icon={faEye} />\r\n        </StyledButton>\r\n        <StyledButton onClick={handleOnDelete}>\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </StyledButton>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default NoteItem;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { connect } from 'react-redux';\r\nimport { editNote } from 'reducers/notesReducer';\r\nimport { StyledButton } from 'components/Button/Button';\r\nimport { StyledButtonWrapper } from 'components/Form/Form';\r\nimport { StyledH1 } from 'components/H1/H1';\r\nimport { StyledModalInput, StyledTextarea } from 'components/Form/Form';\r\n\r\nconst Wrapper = styled.td`\r\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 50vh;\r\n  left: 50vw;\r\n  transform: translate(-50%, -50%);\r\n  border: 5px solid ${({ theme }) => theme.colors.primary};\r\n  z-index: 1;\r\n  padding: 2rem;\r\n  height: 60vh;\r\n  width: min(60vw, 80vw);\r\n  background-color: ${({ theme }) => theme.colors.dark};\r\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.25s ease-in-out;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 90%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nconst StyledContent = styled.p`\r\n  width: 90%;\r\n  height: 70%;\r\n  background-color: ${({ theme }) => theme.colors.lightDark};\r\n  border-radius: 5px;\r\n  padding: 1rem;\r\n  overflow: auto;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledDate = styled.p`\r\n  align-self: flex-end;\r\n  padding: 0.5rem;\r\n  margin-right: 5%;\r\n`;\r\n\r\nconst NoteDetails = ({ isVisible, content, onClose, title, created, onDelete, id, editNote }) => {\r\n  const handleOnDelete = () => {\r\n    onDelete(id);\r\n  };\r\n\r\n  const [edited, setEdited] = useState(false);\r\n  const [editedNote, setEditedNote] = useState({ content, title, created });\r\n\r\n  const handleEdit = () => {\r\n    setEdited(!edited);\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    setEditedNote({ ...editedNote, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSave = () => {\r\n    editNote(editedNote, id);\r\n    setEdited(!edited);\r\n  };\r\n\r\n  return (\r\n    <tr key={id}>\r\n      <Wrapper isVisible={isVisible}>\r\n        {edited ? (\r\n          <>\r\n            <StyledModalInput\r\n              notes\r\n              onChange={handleInputChange}\r\n              value={editedNote.title}\r\n              name=\"title\"\r\n            ></StyledModalInput>\r\n            <StyledTextarea\r\n              notes\r\n              onChange={handleInputChange}\r\n              name=\"content\"\r\n              value={editedNote.content}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <StyledH1>{editedNote.title}</StyledH1>\r\n            <StyledContent>{editedNote.content}</StyledContent>\r\n          </>\r\n        )}\r\n\r\n        <StyledDate>Created: {created}</StyledDate>\r\n        <StyledButtonWrapper>\r\n          <StyledButton onClick={onClose}>Close</StyledButton>\r\n          {edited ? (\r\n            <StyledButton onClick={onSave}>Save</StyledButton>\r\n          ) : (\r\n            <StyledButton onClick={handleEdit}>Edit</StyledButton>\r\n          )}\r\n          <StyledButton onClick={handleOnDelete}>Delete</StyledButton>\r\n        </StyledButtonWrapper>\r\n      </Wrapper>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  editNote,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(NoteDetails);\r\n","import React, { useEffect, useState } from 'react';\r\nimport MainLayout from 'Layout/MainLayout';\r\nimport { StyledH1, StyledH2 } from 'components/H1/H1';\r\nimport { connect } from 'react-redux';\r\nimport withContext from 'components/context/withContext';\r\nimport styled from 'styled-components';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { fetchNotes, deleteNote } from 'reducers/notesReducer';\r\nimport NoteItem from 'components/Notes/NoteItem';\r\nimport NoteDetails from 'components/Notes/NoteDetails';\r\nimport Filters from 'components/filters/Filters';\r\n\r\nconst StyledTable = styled(Table)`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  table-layout: auto;\r\n`;\r\n\r\nconst StyledNotesList = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  top: 13vh;\r\n\r\n  ${({ theme }) => theme.media.phone} {\r\n    width: 95%;\r\n  }\r\n  ${({ theme }) => theme.media.landscape} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst Notes = ({ fetchNotes, notes, isLoading, deleteNote }) => {\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [showID, setShowID] = useState('');\r\n  const [detailsVisible, setDetailsVisible] = useState(false);\r\n  const [filterTitle, setFilterTitle] = useState('');\r\n  const [filterContent, setFilterContent] = useState('');\r\n\r\n  const handleShowDetails = id => {\r\n    setDetailsVisible(!detailsVisible);\r\n    setShowID(id);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setDetailsVisible(!detailsVisible);\r\n    setShowID('');\r\n  };\r\n\r\n  const handleFilterTitleChange = e => {\r\n    setFilterTitle(e.target.value);\r\n  };\r\n  const handleFilterContentChange = e => {\r\n    setFilterContent(e.target.value);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterTitle('');\r\n    setFilterContent('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <MainLayout onAddFetch={fetchNotes} button=\"true\">\r\n        <StyledNotesList>\r\n          <StyledH1>My Private Notes</StyledH1>;\r\n          <Filters\r\n            onTitleFilter={handleFilterTitleChange}\r\n            onContentFilter={handleFilterContentChange}\r\n            titleText={filterTitle}\r\n            contentText={filterContent}\r\n            onClear={clearFilter}\r\n          />\r\n          <StyledTable striped responsive>\r\n            <thead>\r\n              <tr key={1}>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Created</th>\r\n                <th>Edition</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {isLoading ? (\r\n                <tr>\r\n                  <td colSpan={12}>\r\n                    <Spinner animation=\"border\" />\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                notes\r\n                  .filter(note => note.title.toLowerCase().includes(filterTitle.toLowerCase()))\r\n                  .filter(note => note.content.toLowerCase().includes(filterContent.toLowerCase()))\r\n                  .map((note, index) => (\r\n                    <>\r\n                      <NoteItem\r\n                        key={note.id}\r\n                        title={note.title}\r\n                        created={note.created}\r\n                        id={note.id}\r\n                        index={index}\r\n                        showDetails={handleShowDetails}\r\n                        onDelete={deleteNote}\r\n                      />\r\n                      {showID === note.id && (\r\n                        <NoteDetails\r\n                          key={note.created}\r\n                          isVisible={detailsVisible}\r\n                          onClose={handleCloseDetails}\r\n                          content={note.content}\r\n                          id={note.id}\r\n                          title={note.title}\r\n                          created={note.created}\r\n                          onDelete={deleteNote}\r\n                        />\r\n                      )}\r\n                    </>\r\n                  ))\r\n              )}\r\n            </tbody>\r\n          </StyledTable>\r\n        </StyledNotesList>\r\n        {!isLoading && !notes.length && (\r\n          <StyledH2>Your note list is empty! Enter a new note! </StyledH2>\r\n        )}\r\n      </MainLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  notes: state.notesReducer.notes,\r\n  isLoading: state.notesReducer.isLoading,\r\n  error: state.notesReducer.error,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchNotes,\r\n  deleteNote,\r\n};\r\n\r\nexport default withContext(connect(mapStateToProps, mapDispatchToProps)(Notes));\r\n","import React from 'react';\r\n\r\nconst SignIn = () => <h1 style={{color: 'white'}}>please Sign In </h1>;\r\n\r\nexport default SignIn;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport PageContext from 'components/context/context';\r\n\r\nconst ContextLayout = ({ children, ...props }) => {\r\n  const [pageType, setPageType] = useState('notes');\r\n\r\n  const {\r\n    location: { pathname },\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    const pageTypes = ['todos', 'notes', 'home'];\r\n\r\n    const [currentPage] = pageTypes.filter(page => pathname.includes(page));\r\n\r\n    console.log('currentPage', currentPage);\r\n    setPageType(currentPage);\r\n  }, [pathname]);\r\n\r\n  return <PageContext.Provider value={pageType}>{children}</PageContext.Provider>;\r\n};\r\n\r\nexport default withRouter(ContextLayout);\r\n","import React from 'react';\r\nimport GlobalStyle from 'Theme/GlobalStyle';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from 'store';\r\nimport Todos from 'components/views/Todos';\r\nimport Home from 'components/views/Home';\r\nimport Notes from 'components/views/Notes';\r\nimport SignIn from 'components/views/SignIn';\r\nimport ContextLayout from 'components/context/contextLayout';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyle />\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <ContextLayout>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={SignIn}>\r\n              {/* {loggedIn ? <Redirect to=\"/dashboard\" /> : <PublicHomePage />} */}\r\n              <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route path=\"/todos\" component={Todos} />\r\n            <Route path=\"/notes\" component={Notes} />\r\n            <Route path=\"/home\" component={Home} />\r\n          </Switch>\r\n        </ContextLayout>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './components/views/Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
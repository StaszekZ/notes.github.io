{"version":3,"sources":["assets/icons/logout.svg","Theme/GlobalStyle.js","utils/database.js","reducers/todosReducer.js","reducers/modalReducer.js","reducers/notesReducer.js","store/index.js","components/Button/Button.js","components/NavBar/NavBar.js","utils/theme.js","utils/colors.js","components/Todo/TodoItem.js","components/Todo/TodoInput.js","components/Form/Form.js","components/Modal/Modal.js","Layout/MainLayout.js","components/H1/H1.js","components/views/Todos.js","Layout/HomePageLayout.js","components/views/Home.js","components/Notes/NoteItem.js","components/views/Notes.js","components/views/SignIn.js","components/views/Root.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","DATABASE_URL","initialState","todos","isLoading","editID","error","fetchWithoutLoading","dispatch","fetch","then","r","json","arrayTodos","Object","keys","map","key","id","type","payload","setTodos","addNewTask","taskData","method","body","JSON","stringify","editTask","task","editedId","isModalOpen","toggleModalOpen","notes","middleware","applyMiddleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","combinedReducers","combineReducers","todosReducer","state","action","modalReducer","notesReducer","store","createStore","StyledButton","styled","Link","theme","colors","white","primary","media","phone","fontSize","xs","landscape","s","modal","css","homePage","dark","ButtonLink","children","to","Bar","div","isBig","StyledButtonPlace","ButtonIcon","icon","active","NavBar","Button","logoutIcon","blur","font","this","regular","bold","xxs","m","l","xl","tablet","StyledTdWithHover","td","deadline","StyledTd","button","TodoItem","content","completed","index","onEdit","onDelete","onCompleteCheck","className","onClick","faEdit","faTrashAlt","faCheck","color","faTimes","StyledInput","input","TodoInput","props","handleOnSave","onSave","onEnterSave","e","handleInputChange","setState","target","name","value","handleCompletedCheck","onChange","onKeyDown","faSave","handleOnDelete","React","Component","mapDispatchToProps","connect","StyledLabel","label","StyledModalInput","StyledForm","form","StyledButtonWrapper","AddTask","putDataInDatabase","handleOnAddClick","preventDefault","alert","handleOnChange","onQuit","htmlFor","placeholder","faPlus","faUndo","StyledWrapper","isVisible","Modal","onAdd","StyledAddItemButton","onAddFetch","StyledH1","h1","StyledH2","h2","StyledTodoList","StyledTable","Table","StyledButtonClear","StyledFiltersWrapper","fetchTodos","setCompleted","completedId","deleteTask","deletedId","useState","setEditedID","filterContent","setFilterContent","filterDeadline","setFilterDeadline","useEffect","handleEdit","editedID","striped","responsive","colSpan","Spinner","animation","filter","todo","toLowerCase","includes","length","HomePageLayout","Home","style","NoteItem","title","date","console","log","StyledNotesList","fetchNotes","arrayNotes","reverse","setNotes","note","SignIn","Root","basename","process","exact","path","component","Todos","Notes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.de264da0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logout.4b787771.svg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\n*, *::before, *::after{\n  box-sizing: border-box;\n}\n\nhtml{\n  font-size: 62.5%;\n\n}\n\n\nbody{\n  font-size: 1.6rem;\n  padding: 0;\n  margin: 0;\n  font-family: 'Nunito', sans-serif;\n  background-color: #0f1c21;\n  /* background-color: pink; */\n\n  \n th, td {\n   text-align: center;\n }}\n`;\n\nexport default GlobalStyle;\n","import firebase from 'firebase/app';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyBJrGkMXNIRPDTV6mwtNuFonE5N3conc58',\n  authDomain: 'notes-and-todos-6756c.firebaseapp.com',\n  databaseURL: 'https://notes-and-todos-6756c.firebaseio.com',\n  projectId: 'notes-and-todos-6756c',\n  storageBucket: 'notes-and-todos-6756c.appspot.com',\n  messagingSenderId: '432462096709',\n  appId: '1:432462096709:web:690e4faec4f036d458f62c',\n  measurementId: 'G-LL8BYZF9S7',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const DATABASE_URL = firebaseConfig.databaseURL;\n","import { DATABASE_URL } from 'utils/database';\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  editID: null,\n  error: null,\n};\n\n//actions\nconst SET_LOADING = 'SET_LOADING';\nconst SET_TODOS = 'SET_TODOS';\n\nexport const todosReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_TODOS:\n      return {\n        error: null,\n        isLoading: false,\n        editID: null,\n        todos: action.payload,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLoading = () => ({ type: SET_LOADING });\nexport const setTodos = todos => ({ type: SET_TODOS, payload: todos });\n\nconst fetchWithoutLoading = () => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/todos.json`)\n      .then(r => r.json())\n      .then(todos => {\n        const arrayTodos = todos\n          ? Object.keys(todos).map(key => {\n              return {\n                id: key,\n                ...todos[key],\n              };\n            })\n          : [];\n        dispatch(setTodos(arrayTodos));\n      });\n  };\n};\n\nexport const setCompleted = (completedId, content, deadline, completed) => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/todos/${completedId}.json`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        content,\n        deadline,\n        completed: !completed,\n      }),\n    }).then(() => {\n      dispatch(fetchWithoutLoading());\n    });\n  };\n};\n\nexport const fetchTodos = () => {\n  return dispatch => {\n    dispatch(setLoading());\n    dispatch(fetchWithoutLoading());\n  };\n};\n\nexport const addNewTask = taskData => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/todos/.json`, {\n      method: 'POST',\n      body: JSON.stringify(taskData),\n    }).then(() => {\n      dispatch(fetchWithoutLoading());\n    });\n  };\n};\n\nexport const deleteTask = deletedId => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/todos/${deletedId}.json`, {\n      method: 'DELETE',\n    }).then(() => {\n      dispatch(fetchWithoutLoading());\n    });\n  };\n};\n\nexport const editTask = (task, editedId) => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/todos/${editedId}.json`, {\n      method: 'PUT',\n      body: JSON.stringify(task),\n    }).then(() => {\n      dispatch(fetchWithoutLoading());\n    });\n  };\n};\n","const initialState = {\n  isModalOpen: false,\n};\n\nexport const modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_MODAL':\n      return {\n        isModalOpen: !state.isModalOpen,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const toggleModalOpen = () => ({ type: 'TOGGLE_MODAL' });\n","import { DATABASE_URL } from 'utils/database';\n\nconst initialState = {\n  notes: [],\n  isLoading: false,\n  editID: null,\n  error: null,\n};\n\nconst SET_LOADING = 'SET_LOADING';\nconst SET_NOTES = 'SET_NOTES';\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NOTES:\n      return {\n        error: null,\n        isLoading: false,\n        editID: null,\n        notes: action.payload,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setLoading = () => ({ type: SET_LOADING });\nexport const setNotes = notes => ({ type: SET_NOTES, payload: notes });\n\nconst fetchNotesWithoutLoading = () => {\n  return dispatch => {\n    fetch(`${DATABASE_URL}/notes.json`)\n      .then(r => r.json())\n      .then(notes => {\n        const arrayNotes = notes\n          ? Object.keys(notes)\n              .map(key => {\n                return {\n                  id: key,\n                  ...notes[key],\n                };\n              })\n              .reverse()\n          : [];\n        dispatch(setNotes(arrayNotes));\n      });\n  };\n};\n\nexport const fetchNotes = () => {\n  return dispatch => {\n    dispatch(setLoading());\n    dispatch(fetchNotesWithoutLoading());\n  };\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { todosReducer } from 'reducers/todosReducer';\nimport { modalReducer } from 'reducers/modalReducer';\nimport {notesReducer} from 'reducers/notesReducer';\n\nconst middleware = applyMiddleware(thunk);\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst enhancer = composeEnhancers(middleware);\n\nconst combinedReducers = combineReducers({ todosReducer, modalReducer, notesReducer });\n\nconst store = createStore(combinedReducers, enhancer);\nexport default store;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledButton = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  width: 20%;\n  padding: 1rem;\n  height: 50px;\n  background: ${({ theme }) => theme.colors.white};\n  border-radius: 50px;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  font-size: 2rem;\n  font-weight: 600;\n  transition: box-shadow 0.3s ease;\n\n  ${({ theme }) => theme.media.phone} {\n    background: ${({ theme }) => theme.colors.white};\n    color: ${({ theme }) => theme.colors.primary};\n    font-size: ${({ theme }) => theme.fontSize.xs};\n    width: 50px;\n  }\n  ${({ theme }) => theme.media.landscape} {\n    height: 30px;\n    font-size: ${({ theme }) => theme.fontSize.s};\n  }\n\n  :hover {\n    box-shadow: 0 10px 20px -15px ${({ theme }) => theme.colors.primary};\n    background: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.white};\n    text-decoration: none;\n  }\n  ${({ modal }) =>\n    modal &&\n    css`\n      width: 40%;\n    `}\n  ${({ homePage }) =>\n    homePage &&\n    css`\n      height: 100px;\n      box-shadow: -5px 3px 15px rgba(62, 194, 233, 0.3);\n      width: 40%;\n\n      background-color: ${({ theme }) => theme.colors.dark};\n      border: 3px solid ${({ theme }) => theme.colors.primary};\n      ${({ theme }) => theme.media.phone} {\n        background: ${({ theme }) => theme.colors.dark};\n        color: ${({ theme }) => theme.colors.primary};\n        font-size: ${({ theme }) => theme.fontSize.xs};\n        width: 40%;\n      }\n    `}\n`;\n\nconst ButtonLink = ({ children, to, homePage }) => (\n  <StyledButton homePage={homePage} to={to}>\n    {children}\n  </StyledButton>\n);\n\nexport default ButtonLink;\n","import React from 'react';\nimport {Link } from 'react-router-dom';\nimport ButtonLink from 'components/Button/Button';\nimport styled from 'styled-components';\nimport logoutIcon from 'assets/icons/logout.svg';\n\n\nconst Bar = styled.div`\n  width: 100%;\n  height: 12vh;\n  position: fixed;\n  top: 0;\n  right: 0%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: ${({ isBig }) => (isBig ? '3em' : '1.5em')};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\n  background: ${({ theme }) => theme.colors.dark};\n  z-index: 2;\n`;\n\nconst StyledButtonPlace = styled.div`\n  width: 50%;\n  height: inherit;\n  display: inline-flex;\n  justify-content: space-evenly;\n  align-items: center;\n`;\n\nconst ButtonIcon = styled(Link)`\n  width: 50px;\n  height: 50px;\n  border-radius: 20px;\n  margin-right: 1%;\n  background-image: url(${({ icon }) => icon});\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: 50% 50%;\n  border: 2px solid ${({ theme }) => theme.colors.primary};\n  color: white;\n  background-color: ${({ active }) => (active ? 'white' : 'transparent')};\n  &.active {\n    background-color: white;\n  }\n  ${({theme})=> theme.media.landscape}{\n  width: 30px;\n  height: 30px;\n  }\n`;\n\nconst NavBar = () => (\n  <Bar>\n    <StyledButtonPlace>\n      <ButtonLink to=\"/home\">home</ButtonLink>\n      <ButtonLink to=\"/todos\">todos</ButtonLink>\n      <ButtonLink to=\"/notes\">notes</ButtonLink>\n    </StyledButtonPlace>\n    <ButtonIcon to=\"/signin\" icon={logoutIcon} />\n  </Bar>\n);\n\nexport default NavBar;\n","import { colors } from './colors';\n\nexport const theme = {\n  colors,\n  font: {\n    this: 300,\n    regular: 400,\n    bold: 600,\n  },\n  fontSize: {\n    xxs: '1rem',\n    xs: '1.2rem',\n    s: '1.6rem',\n    m: '2.1rem',\n    l: '2.4rem',\n    xl: '4rem',\n  },\n  media: {\n    phone: '@media(max-width: 520px)',\n    tablet: '@media(max-width: 768px)',\n    landscape: '@media(max-width: 736px) and (orientation: landscape) ',\n  },\n};\n","export const colors = {\n  white: '#ffffff',\n  primary: '#3ec2e9',\n  dark: '#0f1c21',\n  blur: 'grey'\n  // hover: '#'\n};\n","// TodoItem.js\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\n\nexport const StyledTdWithHover = styled.td`\n  width: 50%;\n  :hover {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n  ${({ deadline }) =>\n    deadline &&\n    css`\n      width: 10vw;\n    `}\n`;\n\nexport const StyledTd = styled.td`\n  width: fit-content;\n`;\n\nexport const StyledButton = styled.button`\n  color: black;\n  background: white;\n  height: 40px;\n  width: 40px;\n  border-radius: 10px;\n  ${({ theme }) => theme.media.phone} {\n    height: 30px;\n    width: 30px;\n  }\n`;\n\nconst TodoItem = ({\n  content,\n  id,\n  deadline,\n  completed,\n  index,\n  onEdit,\n  onDelete,\n  onCompleteCheck,\n}) => {\n  const handleOnEdit = () => {\n    onEdit(id);\n  };\n\n  const handleOnDelete = () => {\n    onDelete(id);\n  };\n\n  const handleCompletedCheck = () => {\n    onCompleteCheck(id, content, deadline, completed);\n  };\n\n  return (\n    <tr key={id}>\n      <td className=\"align-middle\">{index + 1}</td>\n      <StyledTdWithHover className=\"align-middle\">{content}</StyledTdWithHover>\n      <StyledTdWithHover deadline className=\"align-middle\">\n        {deadline}\n      </StyledTdWithHover>\n      <StyledTd className=\"align-middle\">\n        <StyledButton onClick={handleOnEdit}>\n          <FontAwesomeIcon icon={faEdit} />\n        </StyledButton>\n        <StyledButton onClick={handleOnDelete}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </StyledButton>\n        <StyledButton onClick={handleCompletedCheck}>\n          {completed ? (\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\n          ) : (\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\n          )}\n        </StyledButton>\n      </StyledTd>\n    </tr>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled, { css } from 'styled-components';\nimport { StyledButton } from 'components/Todo/TodoItem';\nimport { editTask } from 'reducers/todosReducer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faSave, faTrashAlt } from '@fortawesome/free-regular-svg-icons';\n\nimport {StyledTd} from 'components/Todo/TodoItem'\n\nexport const StyledInput = styled.input`\n  background-color: lightgray;\n  border: none;\n  border-radius: 20px;\n  width: 100%;\n  padding: 0.5rem 0.5rem;\n  float: left;\n  text-align: center;\n\n  ::placeholder {\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    font-size: 1.2rem;\n  }\n  /* ${({ deadline }) =>\n    deadline &&\n    css`\n      width: inherit;\n    `} */\n`;\n\nclass TodoInput extends React.Component {\n  state = {\n    content: this.props.content,\n    deadline: this.props.deadline,\n    completed: this.props.completed,\n  };\n\n  handleOnSave = () => {\n    this.props.onSave(this.state, this.props.id);\n  };\n\n  onEnterSave = (e) =>{\n    if(e.key === 'Enter'){\n      this.handleOnSave();\n    }\n  }\n\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleCompletedCheck = () => {\n    this.props.onCompleteCheck(\n      this.props.id,\n      this.state.content,\n      this.state.deadline,\n      this.state.completed,\n    );\n  };\n\n  render() {\n    const { index, id } = this.props;\n    const { content, deadline, completed } = this.state;\n    return (\n      <>\n        <tr key={id}>\n          <td className=\"align-middle\">{index + 1}</td>\n          <td className=\"align-middle\">\n            <StyledInput \n            name=\"content\" \n            value={content} \n            onChange={this.handleInputChange} \n            onKeyDown={this.onEnterSave}\n            />\n          </td>\n\n          <td className=\"align-middle\">\n              <StyledInput\n              name=\"deadline\"\n              deadline\n              value={deadline}\n              onChange={this.handleInputChange}\n              onKeyDown={this.onEnterSave}\n            />\n          </td>\n          <StyledTd className=\"align-middle\">\n            <StyledButton onClick={this.handleOnSave} >\n            <FontAwesomeIcon icon={faSave} />\n            </StyledButton>\n         \n         \n            <StyledButton onClick={this.handleOnDelete}>\n            <FontAwesomeIcon icon={faTrashAlt} />\n            </StyledButton>\n       \n\n              <StyledButton onClick={this.handleCompletedCheck}>\n              {completed ? (\n                <FontAwesomeIcon icon={faCheck}  color=\"green\" />\n              ) : (\n                <FontAwesomeIcon icon={faTimes} color=\"red\" />\n              )}\n            </StyledButton>\n          </StyledTd>\n        </tr>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  editTask,\n};\n\nexport default connect(null, mapDispatchToProps)(TodoInput);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { StyledInput } from 'components/Todo/TodoInput';\nimport { StyledButton } from 'components/Button/Button';\nimport { addNewTask } from 'reducers/todosReducer';\nimport { toggleModalOpen } from 'reducers/modalReducer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faUndo } from '@fortawesome/free-solid-svg-icons';\n\nconst StyledLabel = styled.label`\n  color: white;\n  display: block;\n`;\n\nconst StyledModalInput = styled(StyledInput)`\n  width: 70%;\n  margin: 1rem auto;\n  ${({ theme }) => theme.media.phone} {\n    width: 100%;\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  height: 100%;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 90%;\n  margin-top: auto;\n`;\n\nclass AddTask extends Component {\n  state = {\n    content: '',\n    deadline: '',\n    completed: false,\n  };\n\n  putDataInDatabase = () => {\n    this.props.addNewTask(this.state);\n    this.props.toggleModalOpen();\n    this.setState({\n      content: '',\n      deadline: '',\n    });\n  };\n\n  handleOnAddClick = e => {\n    e.preventDefault();\n    if (!this.state.content) {\n      return alert('Please add new task or quit!');\n    }\n    this.putDataInDatabase();\n  };\n\n  onEnterSave = e => {\n    if (e.key === 'Enter') {\n      this.handleOnAddClick(e);\n    }\n  };\n\n  handleOnChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onQuit = () => {\n    this.props.toggleModalOpen();\n  };\n\n  render() {\n    return (\n      <StyledForm>\n        <StyledLabel htmlFor=\"newTask\">Add new task:</StyledLabel>\n        <StyledModalInput\n          name=\"content\"\n          placeholder=\"new task\"\n          value={this.state.content}\n          onChange={this.handleOnChange}\n          onKeyDown={this.onEnterSave}\n        ></StyledModalInput>\n        <StyledModalInput\n          deadline\n          name=\"deadline\"\n          placeholder=\"new deadline\"\n          value={this.state.deadline}\n          onChange={this.handleOnChange}\n          onKeyDown={this.onEnterSave}\n        ></StyledModalInput>\n        <StyledButtonWrapper>\n          <StyledButton\n            modal=\"true\"\n            type=\"submit\"\n            onClick={this.handleOnAddClick}\n                     >\n            <FontAwesomeIcon icon={faPlus} />\n          </StyledButton>\n          <StyledButton onClick={this.onQuit}>\n            <FontAwesomeIcon icon={faUndo} color=\"red\" />\n          </StyledButton>\n        </StyledButtonWrapper>\n      </StyledForm>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  addNewTask,\n  toggleModalOpen,\n};\nexport default connect(null, mapDispatchToProps)(AddTask);\n","import React from 'react';\nimport styled from 'styled-components';\nimport AddTask from 'components/Form/Form';\n\nconst StyledWrapper = styled.div`\n  border: 5px solid ${({ theme }) => theme.colors.primary};\n  z-index: 1;\n  position: fixed;\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\n  padding: 2rem;\n  flex-direction: column;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: 50%;\n  width: 50%;\n  background-color: ${({ theme }) => theme.colors.dark};\n  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.1);\n  /* transform: translate(${({ isVisible }) => (isVisible ? '-100%' : '100%')}); */\n  transition: transform 0.25s ease-in-out;\n\n  ${({ theme }) => theme.media.phone} {\n    height: 60%;\n    width: 90%;\n  }\n  ${({ theme }) => theme.media.landscape} {\n    height: 60%;\n    width: 80%;\n  }\n`;\n\nconst Modal = ({ isVisible, onAdd }) => {\n  return (\n    <StyledWrapper isVisible={isVisible}>\n      <AddTask onAdd={onAdd}></AddTask>\n    </StyledWrapper>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled, { ThemeProvider } from 'styled-components';\nimport NavBar from 'components/NavBar/NavBar.js';\nimport { theme } from '../utils/theme';\nimport { StyledButton } from 'components/Button/Button';\nimport Modal from 'components/Modal/Modal';\nimport { toggleModalOpen } from 'reducers/modalReducer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst StyledAddItemButton = styled(StyledButton)`\n  position: fixed;\n  top: 85vh;\n  left: 85vw;\n  width: 50px;\n  height: 50px;\n  z-index: 2;\n  display: ${({ button }) => (button ? 'flex' : 'none')};\n`;\n\nconst StyledWrapper = styled.div`\nbackground-color: ${({ theme }) => theme.colors.dark};\n  filter: blur(${({ isModalOpen }) => isModalOpen && '5px'});\n`;\n\nconst MainLayout = ({ children, onAddFetch, isModalOpen, toggleModalOpen, button }) => {\n  const handleIsVisible = () => {\n    toggleModalOpen();\n  };\n\n  const handleAddTask = () => {\n    toggleModalOpen();\n    onAddFetch();\n  };\n\n  return (\n    <ThemeProvider theme={theme} isModalOpen={isModalOpen}>\n        <StyledAddItemButton onClick={handleIsVisible} button={button}>\n          <FontAwesomeIcon icon={faPlus} />\n        </StyledAddItemButton>\n        <Modal onAdd={handleAddTask} isVisible={isModalOpen} />\n        <NavBar />\n        <StyledWrapper isModalOpen={isModalOpen}>{children}</StyledWrapper>\n    </ThemeProvider>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isModalOpen: state.modalReducer.isModalOpen,\n});\nconst mapDispatchToProps = {\n  toggleModalOpen,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","\nimport styled from 'styled-components';\n\nexport const StyledH1 = styled.h1`\n  color: ${({ theme }) => theme.colors.white};\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: center;\n  padding: 1rem;\n`;\n\n\nexport const StyledH2 = styled.h2`\n  color: ${({ theme }) => theme.colors.white};\n  font-weight: ${({ theme }) => theme.font.bold};\n  text-align: center;\n  padding: 3rem;\n  margin-bottom: 4rem;\n  position: relative;\n  top: 13vh;\n  /* background-color: red; */\n`;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport MainLayout from 'Layout/MainLayout';\nimport GlobalStyle from 'Theme/GlobalStyle';\nimport { StyledH1, StyledH2 } from 'components/H1/H1';\nimport TodoItem from 'components/Todo/TodoItem';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport TodoInput from 'components/Todo/TodoInput';\nimport { StyledButton } from 'components/Todo/TodoItem';\n\n\nimport { fetchTodos, addNewTask, setCompleted, deleteTask, editTask } from 'reducers/todosReducer';\n\nconst StyledTodoList = styled.div`\n  width: 70%;\n  height: 100%;\n  margin: 0 auto;\n  position: relative;\n  top: 13vh;\n\n  ${({ theme }) => theme.media.phone} {\n    width: 95%;\n  }\n  ${({ theme }) => theme.media.landscape} {\n    width: 95%;\n  }\n`;\n\nconst StyledTable = styled(Table)`\n  color: ${({ theme }) => theme.colors.white};\n  table-layout: auto;\n`;\n\nconst StyledInput = styled.input`\nwidth: 40%;\nheight: 40px;\nborder: 2px solid ${({ theme }) => theme.colors.primary};\nborder-radius: 5px;\ncolor: white;\nbackground-color:${({ theme }) => theme.colors.dark}; \nmargin-bottom: 0.5rem;\nmargin-right: 0.5rem;\n${({theme})=> theme.media.tablet}{\n  ::placeholder{\n  font-size: 1.5rem;\n}\n}\n\n\n`;\n\nconst StyledButtonClear = styled(StyledButton)`\nwidth: 20%;\nmargin-bottom: 0.5rem;\n`;\n\nconst StyledFiltersWrapper = styled.div`\nwidth: 50%;\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\n${({theme})=> theme.media.tablet}{\n  width: 100%;\n}\n${({theme})=> theme.media.landscape}{\n  width: 100%;\n}\n`;\n\n\nconst Todos = ({ isLoading, fetchTodos, todos, deleteTask, setCompleted, editTask }) => {\n  const [editID, setEditedID] = useState(null);\n  const [filterContent, setFilterContent] = useState('');\n  const [filterDeadline, setFilterDeadline] = useState('');\n\n  useEffect(() => {\n    fetchTodos();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleOnSave = (task, editedId) => {\n    editTask(task, editedId);\n    setEditedID(null);\n  };\n\n  const handleEdit = editedID => {\n    setEditedID(editedID);\n  };\n\n  const handleFilterContentChange = e => {\n    setFilterContent(e.target.value);\n  };\n  const handleFilterDeadlineChange = e => {\n    setFilterDeadline(e.target.value);\n  };\n\n  const clearFilter = () => {\n    setFilterContent('');\n    setFilterDeadline('');\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <MainLayout onAddFetch={fetchTodos} button=\"true\">\n        <StyledTodoList>\n          {/* tutaj wrzucić LI LOADING  */}\n          <StyledH1>Todos List</StyledH1>\n          <StyledFiltersWrapper>\n\n          <StyledInput\n            placeholder=\"🔎 by content\"\n            value={filterContent}\n            onChange={handleFilterContentChange}\n          ></StyledInput>\n          <StyledInput\n            placeholder=\"🔎 by deadline\"\n            value={filterDeadline}\n            onChange={handleFilterDeadlineChange}\n          ></StyledInput>\n          <StyledButtonClear onClick={clearFilter}>Clear</StyledButtonClear>\n          </StyledFiltersWrapper>\n          <StyledTable striped responsive>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Content</th>\n                <th>Deadline</th>\n                <th>Edition</th>\n              </tr>\n            </thead>\n            <tbody>\n              {isLoading ? (\n                <tr>\n                  <td colSpan={12}>\n                    <Spinner animation=\"border\" />\n                  </td>\n                </tr>\n              ) : (\n                todos\n                  .filter(todo => (todo.content.toLowerCase().includes(filterContent.toLowerCase())\n                  \n                  ))\n                  .filter(todo => (todo.deadline.toLowerCase().includes(filterDeadline.toLowerCase())\n                  ))\n\n                  //   if (this.state.showCompleted && this.state.showInCompleted) {\n                  //     return textFilter;\n                  //   } else if (this.state.showCompleted) {\n                  //     return textFilter && todo.completed === true;\n                  //   } else if (this.state.showInCompleted) {\n                  //     return textFilter && todo.completed === false;\n                  //   } else {\n                  //     return false;\n                  //   }\n                  // })\n                  .map((todo, index) =>\n                    editID === todo.id ? (\n                      <TodoInput\n                        key={todo.id}\n                        id={todo.id}\n                        index={index}\n                        content={todo.content}\n                        completed={todo.completed}\n                        deadline={todo.deadline}\n                        onSave={handleOnSave}\n                        onDelete={deleteTask}\n                        onCompleteCheck={setCompleted}\n                      />\n                    ) : (\n                      <TodoItem\n                        key={todo.id}\n                        id={todo.id}\n                        index={index}\n                        content={todo.content}\n                        completed={todo.completed}\n                        deadline={todo.deadline}\n                        onEdit={handleEdit}\n                        onDelete={deleteTask}\n                        onCompleteCheck={setCompleted}\n                      />\n                    ),\n                  )\n              )}\n            </tbody>\n          </StyledTable>\n       </StyledTodoList>\n        {!isLoading && !todos.length && (\n          <StyledH2>Your todo list is empty! Enter new task! </StyledH2>\n        )}\n      </MainLayout>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: state.todosReducer.todos,\n  isLoading: state.todosReducer.isLoading,\n  error: state.todosReducer.error,\n});\nconst mapDispatchToProps = {\n  fetchTodos,\n  addNewTask,\n  setCompleted,\n  deleteTask,\n  editTask,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos);\n","import React from 'react';\nimport  { ThemeProvider } from 'styled-components';\nimport NavBar from 'components/NavBar/NavBar.js';\nimport { theme } from '../utils/theme';\n\nconst HomePageLayout = ({children}) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <NavBar />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nexport default HomePageLayout;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport HomePageLayout from 'Layout/HomePageLayout';\nimport styled from 'styled-components';\nimport GlobalStyles from 'Theme/GlobalStyle';\nimport ButtonLink from 'components/Button/Button';\n\nconst StyledWrapper = styled.div`\n  /* border: 3px solid ${({theme})  => theme.colors.primary}; */\n   position: absolute;\n   top: 50%;\n   left: 50%;\n   height: 50%;\n   width: 60%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  padding: 2rem;\n  transform: translate(-50%, -50%);\n  background-color: ${({theme})  => theme.colors.dark};\n  transition: transform 0.25s ease-in-out;\n  ${({ theme }) => theme.media.phone} {\n    width: 90%;\n  }\n  ${({ theme }) => theme.media.landscape} {\n    width: 80%;\n  }\n`;\n\nconst StyledButtonWrapper = styled.div`\n display: flex;\n justify-content: space-evenly;\n align-items: center;\n width: 90%;\n height: 50%;\n`;\n\n\nconst Home = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <HomePageLayout>\n        <StyledWrapper>\n          <h1 style={{color: 'white'}}>In this app you can store your: </h1>\n          <StyledButtonWrapper>\n             <ButtonLink homePage='true' to='/todos'>todos</ButtonLink>\n             <ButtonLink homePage='true' to='/notes'>notes</ButtonLink>\n             </StyledButtonWrapper>\n        </StyledWrapper>\n       </HomePageLayout>\n\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTrashAlt, faEdit } from '@fortawesome/free-regular-svg-icons';\nimport { StyledTdWithHover } from 'components/Todo/TodoItem';\nimport { StyledButton } from 'components/Todo/TodoItem';\n\nconst NoteItem = ({ title, date, index, id }) => {\n  const handleOnEdit = () => {\n    console.log('edited');\n  };\n  const handleOnDelete = () => {\n    console.log('deleted');\n  };\n  return (\n    <tr key={id}>\n      <td className=\"align-middle\">{index + 1}</td>\n      <StyledTdWithHover className=\"align-middle\">{title}</StyledTdWithHover>\n      <StyledTdWithHover deadline className=\"align-middle\">\n        {date}\n      </StyledTdWithHover>\n      <td className=\"align-middle\">\n        <StyledButton onClick={handleOnEdit}>\n          <FontAwesomeIcon icon={faEdit} />\n        </StyledButton>\n        <StyledButton onClick={handleOnDelete}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </StyledButton>\n      </td>\n      {/* <StyledTd className=\"align-middle\">\n        <StyledButton onClick={handleOnEdit}>\n          <FontAwesomeIcon icon={faEdit} />\n        </StyledButton>\n        <StyledButton onClick={handleOnDelete}>\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </StyledButton>\n        <StyledButton onClick={handleCompletedCheck}>\n          {completed ? (\n            <FontAwesomeIcon icon={faCheck} color=\"green\" />\n          ) : (\n            <FontAwesomeIcon icon={faTimes} color=\"red\" />\n          )}\n        </StyledButton>\n      </StyledTd> */}\n    </tr>\n  );\n};\n\nexport default NoteItem;\n","import React, { useEffect } from 'react';\nimport MainLayout from 'Layout/MainLayout';\nimport { StyledH2 } from 'components/H1/H1';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport GlobalStyle from 'Theme/GlobalStyle';\nimport Table from 'react-bootstrap/Table';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { StyledButton } from 'components/Todo/TodoItem';\nimport { fetchNotes } from 'reducers/notesReducer';\nimport NoteItem from 'components/Notes/NoteItem';\n\nconst StyledTable = styled(Table)`\n  color: ${({ theme }) => theme.colors.white};\n  table-layout: auto;\n`;\n\nconst StyledNotesList = styled.div`\n  width: 70%;\n  height: 100%;\n  margin: 0 auto;\n  position: relative;\n  top: 13vh;\n\n  ${({ theme }) => theme.media.phone} {\n    width: 95%;\n  }\n  ${({ theme }) => theme.media.landscape} {\n    width: 95%;\n  }\n`;\n\nconst Notes = ({ fetchNotes, notes, isLoading }) => {\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return (\n    <>\n      <GlobalStyle />\n      <MainLayout onAddFetch={fetchNotes} button=\"true\">\n        <StyledH2>my private notes</StyledH2>;\n        <StyledNotesList>\n          <StyledTable striped responsive>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Title</th>\n                <th>Created</th>\n                <th>Edition</th>\n              </tr>\n            </thead>\n            <tbody>\n              {isLoading ? (\n                <tr>\n                  <td colSpan={12}>\n                    <Spinner animation=\"border\" />\n                  </td>\n                </tr>\n              ) : (\n                notes.map((note, index) => (\n                  <NoteItem\n                    key={note.id}\n                    title={note.title}\n                    date={note.date}\n                    id={note.id}\n                    index={index}\n                  />\n                ))\n              )}\n            </tbody>\n          </StyledTable>\n        </StyledNotesList>\n      </MainLayout>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  notes: state.notesReducer.notes,\n  isLoading: state.notesReducer.isLoading,\n  error: state.notesReducer.error,\n});\nconst mapDispatchToProps = {\n  fetchNotes,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\n","import React from 'react';\n\nconst SignIn = () => <h1 style={{color: 'white'}}>please Sign In </h1>;\n\nexport default SignIn;\n","import React from 'react';\nimport GlobalStyle from 'Theme/GlobalStyle';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from 'store';\nimport Todos from 'components/views/Todos';\nimport Home from 'components/views/Home';\nimport Notes from 'components/views/Notes';\nimport SignIn from 'components/views/SignIn';\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}>\n          {/* {loggedIn ? <Redirect to=\"/dashboard\" /> : <PublicHomePage />} */}\n          <Redirect to=\"/home\"/>\n          </Route>\n          <Route path=\"/todos\" component={Todos} />\n          <Route path=\"/notes\" component={Notes} />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/views/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}